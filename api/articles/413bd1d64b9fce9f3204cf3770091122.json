{"title":"JavaScript中更简便的数组处理函数.map()，.reduce()，.filter()","uid":"413bd1d64b9fce9f3204cf3770091122","slug":"413bd1d64b9fce9f3204cf3770091122","date":"2019-11-02T09:18:18.000Z","updated":"2023-09-12T18:14:52.332Z","comments":true,"path":"api/articles/413bd1d64b9fce9f3204cf3770091122.json","keywords":null,"cover":"https://source.unsplash.com/5Xwaj9gaR0g/1200x628","content":"<p>如果你刚接触 JavaScript 可能你还没有听说过<code>.map()</code>，<code>.reduce()</code>，<code>.filter()</code>。或者听说过，看过别人用过但是自己在实际项目中没有用过。在国内很多开发项目都是需要考虑 IE8 的兼容，为了兼容很多 JavaScript 好用的方法和技巧都被埋没了。但是我发现近几年开始，很多开发项目已经完全抛弃了 IE 这个魔鬼了。如果你不需要兼容古老的 IE 浏览器了，那就要开始熟悉一下这几个方法来处理数组。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>注意这遍文章说的的 3 个方法其实在很多其他语言都可以使用到，因为这几个方法和使用概念在很多其他语言都是存在的。</p></blockquote>\n<hr>\n<h1 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\".map()\"></a>.map()</h1><p>让我用一个简单的例子告诉你如何使用这个方法。假如你现在有多对象的数组数据 - 每一个对象代表着一个员工的信息。现在你想要的最终结果就是取出所有员工的唯一 ID 值。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">// 员工数据</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">employees</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">[</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">20</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Captain Piett</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">24</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">General Veers</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">56</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Admiral Ozzel</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">88</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Commander Jerjerrod</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">]</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">// 你想要的结果</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #FF9E64\">20</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">24</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">56</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">88</span><span style=\"color: #9ABDF5\">]</span></span></code></pre></div><p>其实要实现这个结果有很多数组处理方式。传统的处理方法就是先定义一个空数组，然后使用<code>.forEach()</code>，<code>.for(...of)</code>，或者是最简单的<code>.for()</code>来组装 ID 到你定义的数组里面。</p>\n<p>我们来对比一下传统的处理方式和<code>.map()</code>的区别。</p>\n<p>使用<code>.forEach()</code>：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">employeeIds</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">[]</span></span>\n<span class=\"line\"><span style=\"color: #C0CAF5\">employees</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">forEach</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">employee</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #C0CAF5\">employeeIds</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">push</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">officer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">id</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;)</span></span></code></pre></div><p>注意使用传统的方式，我们必须有一个预定义的空数组变量才行。但是如果是<code>.map()</code>就会更简单了。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">employeeIds</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">employees</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">map</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">employee</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">employee</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">id</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;)</span></span></code></pre></div><p>甚至我们可以用更简洁的方式，使用箭头方法（但是需要 ES6 支持，Babel，或者 TypeScript）。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">employeeIds</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">employees</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">map</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #E0AF68\">employee</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">employee</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">id</span><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><p>所以<code>.map()</code>到底是怎么运作的呢？这个方法有两个参数，第一是回调方法，第二是可选内容（会在回调方法中做为<code>this</code>）。数组里的<code>每个数值/对象会被循环进入到回调方法</code>里面，然后<code>返回新的数值/对象</code>到结果数组里面。</p>\n<p>注意的是结果数组的长度永远都会和被循环的数组的长度一致。</p>\n<hr>\n<h1 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\".reduce()\"></a>.reduce()</h1><p>与<code>.map()</code>相识，<code>.reduce()</code>也是循环一个回调方法，数组里面的每一个元素对回进入回调方法。区别是回调方法返回的值会被传递到下一个回调方法，如此类推（等同于一个累加器）。</p>\n<p><code>.reduce()</code>里的累加值可以是任何属性的值，包括<code>integer</code>，<code>string</code>，<code>object</code>等等。这个累加值会被实力化或者传递到下一个回调方法。</p>\n<p>来上代码，做个简单的例子！假如你有一个飞机师的数组，数组里面有每个飞机师的工龄。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">pilots</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">[</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">10</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Poe Dameron</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">years</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">14</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #9ECE6A\">Temmin &#39;Snap&#39; Wexley</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">years</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">30</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">41</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Tallissan Lintra</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">years</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">16</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">99</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Ello Asty</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">years</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">22</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">]</span></span></code></pre></div><p>现在我们需要知道所有飞机师累计的总工龄。使用<code>.reduce()</code>就是比吃饭还简单的事情。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">totalYears</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilots</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">reduce</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">accumulator</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #E0AF68\">pilot</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">accumulator</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">pilot</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">years</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><p>注意我这里第二个参数我传了 0。第二个参数是一个累加值的初始值。当然如果场景需要这个初始值也可以传入一个变量或者你需要的值。循环了数组里的每一个元素后，reduce 方法会返回最终累加后的值（在我们这个例子中就是<code>82</code>）。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>例子里面的<code>acc</code>和<code>accumulator</code>就是累加值变量</p></blockquote>\n<p>如果是使用 ES6 箭头写法，我们可以写的更加优雅简洁。一行就可以搞掂的事情！</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">totalYears</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilots</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">reduce</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #E0AF68\">acc</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #E0AF68\">pilot</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">acc</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilot</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">years</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><p>现在如果我们需要找到哪一位是最有经验的飞机师。这种情况我们一样可以使用<code>.reduce()</code>。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">mostExpPilot</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilots</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">reduce</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">oldest</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #E0AF68\">pilot</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">oldest</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">years</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">||</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #BB9AF7\">&gt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">pilot</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">years</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">?</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">oldest</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">:</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">pilot</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;&#125;)</span></span></code></pre></div><p>这里我把<code>accumulator</code>变量改为<code>oldest</code>代表飞机师里面的老司机。这时候 reduce 里面的回调方法对比每一个飞机师，每一次飞机师的值进入这个回调方法，工龄更高的就会覆盖<code>oldest</code>变量。最终循环后得到的<code>oldest</code>就是工龄最高的飞机师。</p>\n<p>通过这几个例子，你可以看到使用<code>.reduce()</code>可以简单又优雅的在一个数组里面获取到单个最终值或者对象。</p>\n<hr>\n<h1 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\".filter()\"></a>.filter()</h1><p>如果你现在的场景是需要在一个数组里面过滤一部分的数据，这个时候<code>.filter()</code>就是你的最好的朋友了。</p>\n<p>我们用回飞机师的数据，并且加入了所属航空公司的值：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">pilots</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">[</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Wedge Antilles</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">faction</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Rebels</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">8</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Ciena Ree</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">faction</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Empire</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">40</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Iden Versio</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">faction</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Empire</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">id</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">66</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Thane Kyrell</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">faction</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Rebels</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">]</span></span></code></pre></div><p>加入现在我们想分别筛选出<code>Rebels</code>和<code>Empire</code>两个航空公司的飞机师，使用<code>.filter()</code>就是轻而易举的事情！</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">rebels</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilots</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">filter</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">pilot</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">pilot</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">faction</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">===</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Rebels</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">empire</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilots</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">filter</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">pilot</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">pilot</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">faction</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">===</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Empire</span><span style=\"color: #89DDFF\">&#39;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;)</span></span></code></pre></div><p>就这么简单，如果使用箭头方法（ES6）就更加优雅了：</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">rebels</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilots</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">filter</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #E0AF68\">pilot</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilot</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">faction</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">===</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Rebels</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">empire</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilots</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">filter</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #E0AF68\">pilot</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">pilot</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">faction</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">===</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Empire</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><p>其实原理很简单，只要你的回调方法返回的是<code>true</code>，这个值或者对象就会在新的数组里面了。如果返回的是<code>false</code>就会被过滤掉了。</p>\n<hr>\n<h1 id=\"结合使用-map-，-reduce-，-filter\"><a href=\"#结合使用-map-，-reduce-，-filter\" class=\"headerlink\" title=\"结合使用 .map()，.reduce()，.filter()\"></a>结合使用 .map()，.reduce()，.filter()</h1><p>既然我们刚刚学到的三个函数都是可以用于数组的，并且<code>.map()</code>和<code>.filter()</code>都是返回数组的。那我们就可以串联起来使用。不说多了上代码试试！</p>\n<p>我们用一个有趣一点的数据试验一下，假如现在我们有一个<code>星球大战</code>里面的<code>人物</code>的数组。每个字段的定义如下：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li><code>Id</code>: 人物唯一 ID</li>\n<li><code>name</code>: 人物名字</li>\n<li><code>pilotingScore</code>: 飞行能力指数</li>\n<li><code>shootingScore</code>: 射击能力指数</li>\n<li><code>isForceUser</code>: 是否拥有隔空操控能力</li>\n</ul></blockquote>\n<p>我们的目标：获取<code>拥有隔空操控能力的飞行员的总飞行能力指数</code>。我们先分开一步一步实现这个目标！</p>\n<ul>\n<li>首先我们需要先获取到拥有隔空操控能力的飞行员。</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">jediPersonnel</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">personnel</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">filter</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">person</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">person</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">isForceUser</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">// 结果集: [&#123;...&#125;, &#123;...&#125;, &#123;...&#125;] (Luke, Ezra and Caleb)</span></span></code></pre></div><ul>\n<li>这段代码我们获得了 3 个飞行员对象，分别都是拥有隔空操控能力的飞行员。使用这个对象我们来获取每个飞行员的飞行能力指数值。</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">jediScores</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">jediPersonnel</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">map</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">jedi</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">jedi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">pilotingScore</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">jedi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">shootingScore</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;)</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">// 结果: [154, 110, 156]</span></span></code></pre></div><ul>\n<li>获取到每个飞行员的飞行能力指数值后，我们就可以用累加器（<code>.reduce()</code>）获取总飞行能力指数了。</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">totalJediScore</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">jediScores</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">reduce</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">acc</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #E0AF68\">score</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">acc</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">score</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">// 结果: 420</span></span></code></pre></div><p>这里分开实现方式可以达到我们的目标，但是其实我们可以串联起来，可以写的更加简洁又优雅！我们来玩玩更好玩的吧！</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">totalJediScore</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">personnel</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">filter</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">person</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">person</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">isForceUser</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">map</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">jedi</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">jedi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">pilotingScore</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">jedi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">shootingScore</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;)</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">reduce</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">acc</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #E0AF68\">score</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">acc</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">score</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><p>这样写是不是很优雅！都被这段代码给美到了！❤️</p>\n<p>如果我们使用箭头写法 ES6，就更加优雅了！</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">totalJediScore</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">personnel</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">filter</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #E0AF68\">person</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">person</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">isForceUser</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">map</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #E0AF68\">jedi</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">jedi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">pilotingScore</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">jedi</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">shootingScore</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">reduce</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #E0AF68\">acc</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #E0AF68\">score</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">acc</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">score</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><p>哇！代码原来可以写的那么优雅的么？！想不到吧？</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>其实我们只需要使用<code>.reduce()</code>就可以得到我们的目标结果了，以上例子做为教学例子，所以使用了 3 个我们学到的函数。</p>\n<p>我们来看看只用<code>.reduce()</code>怎么实现的，来我们一起来刷新一下三观吧！</p></blockquote>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">totalJediScore</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">personnel</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">reduce</span><span style=\"color: #9ABDF5\">(</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">acc</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #E0AF68\">person</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">=&gt;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #C0CAF5\">person</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">isForceUser</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">      </span><span style=\"color: #BB9AF7\">?</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">acc</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">person</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">pilotingScore</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">person</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">shootingScore</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">      </span><span style=\"color: #BB9AF7\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">acc</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><p>不敢想象吧？一行就搞定一个功能不是梦！</p>\n<h1 id=\"为什么抛弃-forEach\"><a href=\"#为什么抛弃-forEach\" class=\"headerlink\" title=\"为什么抛弃 .forEach()?\"></a>为什么抛弃 .forEach()?</h1><p>其实我一开始写前端的时候也是一顿撸，来个数组都是撸个 for 循环，解决一切数组处理问题。但是近几年我开始步入前后端开发，API 接口对接。发现数据处理越来越多，如果还是像以前那样什么都用 for 循环来处理数据，那其实数据处理的代码就会越来越臃肿越来越复杂凌乱。所以我开始抛弃了<code>.forEach()</code>。开始做一个优雅的程序员！</p>\n<p>为什么使用<code>.map()</code>，<code>.filter()</code>，<code>.reduce()</code>写代码更优雅，更美观呢？我们用一个实战例子来对比一下吧。</p>\n<p>假设现在我们对接一个接口，返回的数组里面有两个字段<code>name：人的名称</code>和<code>title：对应的职位</code>。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">data</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">[</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Jan Dodonna</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">title</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">General</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">name</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Gial Ackbar</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">    </span><span style=\"color: #73DACA\">title</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #9ECE6A\">Admiral</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #A9B1D6\">  </span><span style=\"color: #9ABDF5\">&#125;</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">]</span></span></code></pre></div><p>产品经理给到你的需求是只需要展示这些人的职位称呼。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当然这个时候有一些前端就会说“我只是个小小的前端，后端给我处理吧”。但是，这个接口其实是一个通用的接口，就是获取这些员工的资料的，是在多个地方使用的。如果每一个页面因为需要展示的不一样而要写多一个接口给你，你觉得这样好吗？做为一个优秀的前端工程师 🦁️，这种小 case 你自己就可以很优雅的处理好了。而且，在一个优秀的团队，后端确实是要考虑接口通用性的，这种为了你的方便而给他们带来更臃肿的接口是不可接受的。所以前端这个时候就是要重组数据了。</p></blockquote>\n<p>假设现在产品给你的需求是员工列表展示，要支持只展示员工职称和员工左右信息的两种显示项。这个时候我们就要编写一个数据组装方法来跟进展示要求来改变数据格式。</p>\n<p>因为这个“神马“的需求，我们使用<code>.forEach()</code>来重组数据就相对比较麻烦了，而且代码也会变得臃肿。</p>\n<p>我们忽略了组装数据的方法，直接就当作我们已经写好了一个组装数据的方法为<code>formatElement</code>。如果我们用<code>forEach</code>首先我们就需要定义一个空数组来接收结果。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">results</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">[]</span></span>\n<span class=\"line\"><span style=\"color: #C0CAF5\">data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">forEach</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">element</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">formatted</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #7AA2F7\">formatElement</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">element</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #C0CAF5\">results</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">push</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">formatted</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;)</span></span></code></pre></div><p>所以我们需要两个方法才能实现这个数据结果，但是为什么要写的那么臃肿呢？因为<code>forEach</code>并没有返回值，单单就给你跑个循环，还需要自己<code>push</code>值到预定义的变量里面。其实一个方法就可以完成了，而且重点是一行代码就完事了。</p>\n<p>来使用我们新学的技巧，用<code>.map()</code>来实现就非常简单优雅了。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">results</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #C0CAF5\">data</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">map</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">formatElement</span><span style=\"color: #9ABDF5\">)</span></span></code></pre></div><h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>你学会了吗？学会了就去尝试用<code>.map()</code>，<code>.reduce()</code>，<code>.filter()</code>来替换你传统的<code>for</code>循环吧！我保证你的代码会越来越简洁，可读性更高。</p>\n<p>如果你喜欢我的这遍文章，记得继续关注我的博客，下一遍文章我们开学习怎么在 JavaScript 中使用<code>.some()</code>和<code>.find()</code>。</p>\n<p>坚持做一个优雅的程序员，坚持每天敲代码！</p>\n","text":"如果你刚接触 JavaScript 可能你还没有听说过.map()，.reduce()，.filter()。或者听说过，看过别人用过但是自己在实际项目中没有用过...","permalink":"/post/413bd1d64b9fce9f3204cf3770091122","photos":[],"count_time":{"symbolsCount":"7k","symbolsTime":"6 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":10,"path":"api/categories/FrontEnd.json"},{"name":"Tips","slug":"FrontEnd/Tips","count":2,"path":"api/categories/FrontEnd/Tips.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"},{"name":"ES6","slug":"ES6","count":1,"path":"api/tags/ES6.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#map\"><span class=\"toc-text\">.map()</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#reduce\"><span class=\"toc-text\">.reduce()</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#filter\"><span class=\"toc-text\">.filter()</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%93%E5%90%88%E4%BD%BF%E7%94%A8-map-%EF%BC%8C-reduce-%EF%BC%8C-filter\"><span class=\"toc-text\">结合使用 .map()，.reduce()，.filter()</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E6%8A%9B%E5%BC%83-forEach\"><span class=\"toc-text\">为什么抛弃 .forEach()?</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/bennyxguo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"带你体验Vue2和Vue3开发组件有什么区别","uid":"3d6151b8bdfcae4be7bfdc3647f80109","slug":"3d6151b8bdfcae4be7bfdc3647f80109","date":"2020-03-08T21:59:18.000Z","updated":"2023-09-12T18:14:52.332Z","comments":true,"path":"api/articles/3d6151b8bdfcae4be7bfdc3647f80109.json","keywords":null,"cover":"https://source.unsplash.com/m_HRfLhgABo/1200x628","text":"我们一直都有关注和阅读很多关于 Vue3 的新特性和功能即将到来。但是我们没有一个具体的概念在开发中会有如何的改变和不一样的体验。还有一些童鞋已经开始又慌又抓狂...","permalink":"/post/3d6151b8bdfcae4be7bfdc3647f80109","photos":[],"count_time":{"symbolsCount":"9.3k","symbolsTime":"8 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":10,"path":"api/categories/FrontEnd.json"},{"name":"Vue","slug":"FrontEnd/Vue","count":1,"path":"api/categories/FrontEnd/Vue.json"}],"tags":[{"name":"Vue","slug":"Vue","count":1,"path":"api/tags/Vue.json"},{"name":"Vue3","slug":"Vue3","count":1,"path":"api/tags/Vue3.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/bennyxguo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"如何高效学习编程","uid":"84a74e4a5473540e455e5775f4e38ad4","slug":"84a74e4a5473540e455e5775f4e38ad4","date":"2019-11-01T10:26:02.000Z","updated":"2023-09-12T18:14:52.336Z","comments":true,"path":"api/articles/84a74e4a5473540e455e5775f4e38ad4.json","keywords":null,"cover":"https://source.unsplash.com/qHexzN6spcE/1200x628","text":"编程确实不是一件容易的事情，除了要有较强的逻辑思维，还需要花大量的时间和集中力来提升和维持一定的高度。 与其他的领域不一样的是，技术每日都在变，所以对于编程初学...","permalink":"/post/84a74e4a5473540e455e5775f4e38ad4","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"Notes","slug":"Notes","count":1,"path":"api/categories/Notes.json"}],"tags":[{"name":"Learning","slug":"Learning","count":1,"path":"api/tags/Learning.json"},{"name":"Programming","slug":"Programming","count":1,"path":"api/tags/Programming.json"},{"name":"Notes","slug":"Notes","count":1,"path":"api/tags/Notes.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/bennyxguo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}