{"title":"Lumen 使用 laravel passport","uid":"856e8266ee6e8a15c82abdb9b8c2a650","slug":"856e8266ee6e8a15c82abdb9b8c2a650","date":"2019-01-10T01:51:23.000Z","updated":"2023-08-18T12:19:22.318Z","comments":true,"path":"api/articles/856e8266ee6e8a15c82abdb9b8c2a650.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","content":"<p>Lumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的.<br>所以如果要在lumen上使用laravel的passport就需要安装另外一个插件.</p>\n<h2 id=\"安装要求\"><a href=\"#安装要求\" class=\"headerlink\" title=\"安装要求\"></a>安装要求</h2><ul>\n<li>PHP &gt;&#x3D; 5.6.3</li>\n<li>Lumen &gt;&#x3D; 5.3</li>\n</ul>\n<h2 id=\"Composer安装lumen-passport插件\"><a href=\"#Composer安装lumen-passport插件\" class=\"headerlink\" title=\"Composer安装lumen-passport插件\"></a>Composer安装lumen-passport插件</h2><p>首先安装 Lumen Passport</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 进入项目根目录\n$ cd lumen-app\n\n# 使用composer安装插件\n$ composer require dusterio&#x2F;lumen-passport</code></pre>\n\n<h2 id=\"修改-bootstrap-bootstrap-app-php\"><a href=\"#修改-bootstrap-bootstrap-app-php\" class=\"headerlink\" title=\"修改 bootstrap (bootstrap&#x2F;app.php)\"></a>修改 bootstrap (bootstrap&#x2F;app.php)</h2><p>需要引入Laravel Passport的provider和Lumen的一些provider</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&#x2F;&#x2F; 开启 Facades\n$app-&gt;withFacades();\n\n&#x2F;&#x2F; 开启 Eloquent\n$app-&gt;withEloquent();\n\n&#x2F;&#x2F; 开启 auth 中间件\n$app-&gt;routeMiddleware([\n    &#39;auth&#39; &#x3D;&gt; App\\Http\\Middleware\\Authenticate::class,\n]);\n\n&#x2F;&#x2F; 注册laravel passport的provider和lumen passport的provider\n$app-&gt;register(Laravel\\Passport\\PassportServiceProvider::class);\n$app-&gt;register(Dusterio\\LumenPassport\\PassportServiceProvider::class);</code></pre>\n<h2 id=\"数据表移植和安装Laravel-Passport\"><a href=\"#数据表移植和安装Laravel-Passport\" class=\"headerlink\" title=\"数据表移植和安装Laravel Passport\"></a>数据表移植和安装Laravel Passport</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 移植passport的数据表\nphp artisan migrate\n\n# 安装passport需要的配置\nphp artisan passport:install</code></pre>\n\n<h2 id=\"Lumen-Passport自带的路由\"><a href=\"#Lumen-Passport自带的路由\" class=\"headerlink\" title=\"Lumen Passport自带的路由\"></a>Lumen Passport自带的路由</h2><p>这个lumen-passport包已经引入了一下路由, 但是与web相关的路由因为lumen是没有web的路由的, 只有api的, 所以这个插件已经把web端的路由都去掉了.</p>\n<table>\n<thead>\n<tr>\n<th>Verb</th>\n<th>Path</th>\n<th>NamedRoute</th>\n<th>Controller</th>\n<th>Action</th>\n<th>Middleware</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>POST</td>\n<td>&#x2F;oauth&#x2F;token</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\AccessTokenController</td>\n<td>issueToken</td>\n<td>-</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>&#x2F;oauth&#x2F;tokens</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\AuthorizedAccessTokenController</td>\n<td>forUser</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>&#x2F;oauth&#x2F;tokens&#x2F;{token_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\AuthorizedAccessTokenController</td>\n<td>destroy</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>&#x2F;oauth&#x2F;token&#x2F;refresh</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\TransientTokenController</td>\n<td>refresh</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>&#x2F;oauth&#x2F;clients</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>forUser</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>&#x2F;oauth&#x2F;clients</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>store</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>PUT</td>\n<td>&#x2F;oauth&#x2F;clients&#x2F;{client_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>update</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>&#x2F;oauth&#x2F;clients&#x2F;{client_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ClientController</td>\n<td>destroy</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>&#x2F;oauth&#x2F;scopes</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\ScopeController</td>\n<td>all</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>GET</td>\n<td>&#x2F;oauth&#x2F;personal-access-tokens</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController</td>\n<td>forUser</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>POST</td>\n<td>&#x2F;oauth&#x2F;personal-access-tokens</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController</td>\n<td>store</td>\n<td>auth</td>\n</tr>\n<tr>\n<td>DELETE</td>\n<td>&#x2F;oauth&#x2F;personal-access-tokens&#x2F;{token_id}</td>\n<td></td>\n<td>\\Laravel\\Passport\\Http\\Controllers\\PersonalAccessTokenController</td>\n<td>destroy</td>\n<td>auth</td>\n</tr>\n</tbody></table>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>修改 <code>config/auth.php</code> 里面的配置, 按照项目需要修改. 下面是一个简单的例子</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">return [\n    &#39;defaults&#39; &#x3D;&gt; [\n        &#39;guard&#39; &#x3D;&gt; &#39;api&#39;,\n        &#39;passwords&#39; &#x3D;&gt; &#39;users&#39;,\n    ],\n\n    &#39;guards&#39; &#x3D;&gt; [\n        &#39;api&#39; &#x3D;&gt; [\n            &#39;driver&#39; &#x3D;&gt; &#39;passport&#39;,\n            &#39;provider&#39; &#x3D;&gt; &#39;users&#39;,\n        ],\n    ],\n\n    &#39;providers&#39; &#x3D;&gt; [\n        &#39;users&#39; &#x3D;&gt; [\n            &#39;driver&#39; &#x3D;&gt; &#39;eloquent&#39;,\n            &#39;model&#39; &#x3D;&gt; \\App\\User::class\n        ]\n    ]\n];</code></pre>\n\n<p>需要在 <code>vendor\\laravel\\lumen-framework\\config\\auth.php</code> 复制到项目根目录下的<code>config</code>文件夹里面, 如果没有config文件夹, 需要手动添加一个.</p>\n<p>然后在<code>bootstrap/app.php</code>最前面加入配置应用, 因为lumen是不自动引入config里面的配置的.</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$app-&gt;configure(&#39;auth&#39;);</code></pre>\n\n<h2 id=\"注册路由\"><a href=\"#注册路由\" class=\"headerlink\" title=\"注册路由\"></a>注册路由</h2><p>需要在<code>Provider\\AuthServiceProviders.php</code>里面的<code>boot</code>方法里面注册路由</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&#x2F;**\n* Boot the authentication services for the application.\n*\n* @return void\n*&#x2F;\npublic function boot()\n&#123;\n    &#x2F;&#x2F; Here you may define how you wish users to be authenticated for your Lumen\n    &#x2F;&#x2F; application. The callback which receives the incoming request instance\n    &#x2F;&#x2F; should return either a User instance or null. You&#39;re free to obtain\n    &#x2F;&#x2F; the User instance via an API token or any other method necessary.\n\n    LumenPassport::routes($this-&gt;app); &#x2F;&#x2F; 注册路由\n\n    LumenPassport::tokensExpireIn(Carbon::now()-&gt;addDays(7));\n\n    LumenPassport::refreshTokensExpireIn(Carbon::now()-&gt;addDays(30));\n&#125;</code></pre>\n\n<p>简单路由注册</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">Dusterio\\LumenPassport\\LumenPassport::routes($this-&gt;app);</code></pre>\n\n<p>通用版本控制的路由</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">Dusterio\\LumenPassport\\LumenPassport::routes($this-&gt;app, [&#39;prefix&#39; &#x3D;&gt; &#39;v1&#x2F;oauth&#39;]);</code></pre>\n\n<h2 id=\"用户模型\"><a href=\"#用户模型\" class=\"headerlink\" title=\"用户模型\"></a>用户模型</h2><p>需要在用户模型里面加入<code>HasApiTokens</code>的trait, 例子:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">class User extends Model implements AuthenticatableContract, AuthorizableContract\n&#123;\n    use HasApiTokens, Authenticatable, Authorizable;\n\n    &#x2F;* rest of the model *&#x2F;\n&#125;</code></pre>\n\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><p>其他的详细文档可以查看lumen-passport的插件<a href=\"https://github.com/dusterio/lumen-passport\">github</a></p>\n","text":"Lumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的.所以如果要在lum...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85%E8%A6%81%E6%B1%82\"><span class=\"toc-text\">安装要求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Composer%E5%AE%89%E8%A3%85lumen-passport%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">Composer安装lumen-passport插件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9-bootstrap-bootstrap-app-php\"><span class=\"toc-text\">修改 bootstrap (bootstrap&#x2F;app.php)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E8%A1%A8%E7%A7%BB%E6%A4%8D%E5%92%8C%E5%AE%89%E8%A3%85Laravel-Passport\"><span class=\"toc-text\">数据表移植和安装Laravel Passport</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Lumen-Passport%E8%87%AA%E5%B8%A6%E7%9A%84%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">Lumen Passport自带的路由</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E5%86%8C%E8%B7%AF%E7%94%B1\"><span class=\"toc-text\">注册路由</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%A8%E6%88%B7%E6%A8%A1%E5%9E%8B\"><span class=\"toc-text\">用户模型</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96\"><span class=\"toc-text\">其他</span></a></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"GitLab Webhook 自动部署","uid":"0e4eed29bacbb07352028a3973ca9ed9","slug":"0e4eed29bacbb07352028a3973ca9ed9","date":"2019-09-10T01:51:23.000Z","updated":"2023-08-18T12:19:22.318Z","comments":true,"path":"api/articles/0e4eed29bacbb07352028a3973ca9ed9.json","keywords":null,"cover":"https://s2.ax1x.com/2019/09/18/n7ku11.png","text":"创建与填写部署公钥创建部署公钥sudo -Hu www ssh-keygen -t rsa 如果创建失败首先需要创建&#x2F;home&#x2F;www&#x...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"运维","slug":"运维","count":1,"path":"api/categories/运维.json"}],"tags":[{"name":"Gitlab","slug":"Gitlab","count":1,"path":"api/tags/Gitlab.json"},{"name":"Webhook","slug":"Webhook","count":1,"path":"api/tags/Webhook.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"Lumen passport实现多个用户体系下的oauth验证","uid":"44e4c38c8d84ec4aadd2af71d96fa2b0","slug":"44e4c38c8d84ec4aadd2af71d96fa2b0","date":"2019-01-10T01:40:41.000Z","updated":"2023-08-18T12:19:22.318Z","comments":true,"path":"api/articles/44e4c38c8d84ec4aadd2af71d96fa2b0.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","text":"这个教程是基于, lumen里面已经安装好了lumen-passport的插件, 如果还没有的话可以先到lumen使用laravel passport教程先安装...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}