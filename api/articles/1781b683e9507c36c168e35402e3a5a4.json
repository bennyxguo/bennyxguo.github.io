{"title":"力扣实战之移动零、盛最多的水、爬楼梯","uid":"1781b683e9507c36c168e35402e3a5a4","slug":"1781b683e9507c36c168e35402e3a5a4","date":"2020-06-24T22:03:17.000Z","updated":"2023-09-12T18:14:52.332Z","comments":true,"path":"api/articles/1781b683e9507c36c168e35402e3a5a4.json","keywords":null,"cover":"https://source.unsplash.com/Zt5KC97bAHQ/1200x628","content":"<h1 id=\"练题法则\"><a href=\"#练题法则\" class=\"headerlink\" title=\"练题法则\"></a>练题法则</h1><p><strong>5-10 分钟读题与思考</strong></p>\n<ul>\n<li><strong>不要纠结</strong>没有思路就直接看题解；</li>\n<li><strong>不要死磕</strong>觉得自己很失败，怎么我们就想不出来；</li>\n<li>基本上这些算法题，让我们自己想出来是不可能的；</li>\n<li>拿跳表的来说，如果我们能从 0-1 把它想出来，那我们就可以拿到图灵奖了；</li>\n<li>所以记住！<strong>无思路就直接看题解，无思路就直接看题解，无思路就直接看题解</strong>！</li>\n<li>我们只需要<strong>知道并且能运用即可！</strong></li>\n</ul>\n<p><strong>有思路</strong></p>\n<ul>\n<li>自己开始写代码，没有，就马上看题解！<br><strong>默写背题，熟练</strong></li>\n<li>做完题目后，我们需要记住这种题的思路和有<strong>N 种解决办法</strong>；</li>\n<li>重复再<strong>重复的默写，</strong>直到自己有深刻的影响；</li>\n</ul>\n<p><strong>最后开始自己写（闭卷）</strong></p>\n<ul>\n<li>到了这里如果我们还需要看别人代码，那就要回去背题；</li>\n<li>能到达这个阶段基本这种题你已经开始熟悉的，接下来就是反复练习；</li>\n</ul>\n<h2 id=\"在哪里练题？\"><a href=\"#在哪里练题？\" class=\"headerlink\" title=\"在哪里练题？\"></a>在哪里练题？</h2><p>那肯定是<a href=\"https://leetcode-cn.com/\">力扣</a>了！没有账号的小伙伴，马上就去注册个账号开始日复一日的练习吧！～</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200613135642518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\"></p>\n<h1 id=\"283-题-移动零\"><a href=\"#283-题-移动零\" class=\"headerlink\" title=\"283 题 - 移动零\"></a>283 题 - 移动零</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://leetcode-cn.com/problems/move-zeroes/\">283. 移动零</a>｜<strong>难度</strong>：<font color=\"green\">简单</font></p></blockquote>\n<h2 id=\"题目讲解\"><a href=\"#题目讲解\" class=\"headerlink\" title=\"题目讲解\"></a>题目讲解</h2><p>给定一个数组 <code>nums</code>，编写一个函数将所有 <code>0</code> 移动到数组的末尾，同时保持非零元素的相对顺序。</p>\n<p>示例：</p>\n<div class=\"language-plaintext\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">plaintext</span>输入: [0,1,0,3,12]\n输出: [1,3,12,0,0]</div><p><strong>说明</strong>:</p>\n<ol>\n<li>必须在原数组上操作，不能拷贝额外的数组。</li>\n<li>尽量减少操作次数。</li>\n</ol>\n<p><strong>这里需要注意的重点：</strong></p>\n<ol>\n<li>所有 <code>0</code> 移动到数组的末尾；</li>\n<li>保持非零元素的相对顺序；</li>\n<li>必须在原数组上操作，不能拷贝额外的数组；</li>\n</ol>\n<h2 id=\"解题思路\"><a href=\"#解题思路\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>思考题解时，使用<strong>MECE 原则</strong> — 每一个思路都相对独立的思维，然后想到完全穷尽。首先不要管附加条件，先把有可能解决这个问题的思路都想出来，再评估哪一个办法是最优解。面试的时候也是一样，说出你所有可以想到的思路，然后分别讲出各自的优点与缺点，最后提出最优答案。</p></blockquote>\n<ol>\n<li><strong>统计 0 的个数</strong><ul>\n<li>循环数组找到 0 的位置，遇到 0 就为 0 的个数加一；</li>\n<li>遇到不是 0 的时候，把非 0 的元素值与 0 的元素交换即可；</li>\n</ul>\n</li>\n<li><strong>开新数组</strong><ul>\n<li>给一个指针<code>i</code>从数组的头部开始递增；</li>\n<li>给一个指针<code>j</code>从数组的尾部开始递减（也就是原数组的总长度）；</li>\n<li>遇到零就往<code>j</code>指针的位置放，然后<code>j--</code>；</li>\n<li>遇到非零就往<code>i</code>指针的位置放，然后<code>i++</code>；</li>\n<li><strong>缺点：</strong>内存使用会高；</li>\n<li><strong>不符合条件：</strong>必须在原数组上操作，所以可以实现但是不符合条件；</li>\n</ul>\n</li>\n<li><strong>双指针交换</strong><ul>\n<li>给两个指针<code>i</code>和<code>j</code>，并且默认都从 0 开始；</li>\n<li><code>i</code>指向的是当前位置；</li>\n<li><code>j</code>指针会一直移动，直到找到一个非零元素，然后与<code>i</code>位置的值交换；</li>\n<li>如果<code>j</code>的位置与<code>i</code>不是一致的话，就可以给<code>j</code>的值换成 0；</li>\n</ul>\n</li>\n<li><strong>双指针替换后清零</strong><ul>\n<li>这个与<strong>第三种</strong>方法一致，也是双指针；</li>\n<li>唯一的区别是不在<code>i</code>指针扫描的时候替换零；</li>\n<li>而是在替换完毕所有非零元素后，把剩余的全部位数都改为 0；</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"解题代码\"><a href=\"#解题代码\" class=\"headerlink\" title=\"解题代码\"></a>解题代码</h2><p><strong>「方法一」</strong> - 统计 0 的个数：</p>\n<ul>\n<li>时间复杂度：$O(n)$ - N 个元素就需要遍历 N 次</li>\n<li>空间复杂度：$O(1)$ - 只对原数组进行替换操作</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number[]</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">nums</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">void</span><span style=\"color: #444B6A; font-style: italic\">&#125; Do not return anything, modify nums in-place instead.</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">moveZeroes</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">nums</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">zeroCount</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7\">if</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #BB9AF7\">==</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">zeroCount</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    &#125; </span><span style=\"color: #BB9AF7\">else</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">if</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">zeroCount</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&gt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #7DCFFF\">zeroCount</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">]</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><p><strong>「方法二」</strong> - 双指针交换：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200624213737392.gif#pic_center\"></p>\n<ul>\n<li>时间复杂度：$O(n)$ - N 个元素就需要遍历 N 次</li>\n<li>空间复杂度：$O(1)$ - 只对原数组进行替换操作</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number[]</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">nums</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">void</span><span style=\"color: #444B6A; font-style: italic\">&#125; Do not return anything, modify nums in-place instead.</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">moveZeroes</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">nums</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7\">if</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #BB9AF7\">!==</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">j</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">]</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #BB9AF7\">if</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">!==</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">        </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #89DDFF\">++</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><p><strong>「方法三」</strong> - 双指针替换后清零：</p>\n<p><img src=\"https://img-blog.csdnimg.cn/20200624213755998.gif#pic_center\"></p>\n<ul>\n<li>时间复杂度：$O(n)$ - N 个元素就需要遍历 N 次，加上最后清零是走了<code>n减非零的个数</code>，那就是<code>O(n+n-i)</code>，总的来说还是<code>O(n)</code></li>\n<li>空间复杂度：$O(1)$ - 只对原数组进行替换操作</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number[]</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">nums</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">void</span><span style=\"color: #444B6A; font-style: italic\">&#125; Do not return anything, modify nums in-place instead.</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">moveZeroes</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">nums</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7\">if</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #BB9AF7\">!=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">j</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">]</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #89DDFF\">++</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">k</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">k</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">k</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #C0CAF5\">nums</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">k</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><h2 id=\"边界测试用例\"><a href=\"#边界测试用例\" class=\"headerlink\" title=\"边界测试用例\"></a>边界测试用例</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>[0,1,0,3,12][1,2] &gt; [0,0]</p></blockquote>\n<h2 id=\"题解对比与分析\"><a href=\"#题解对比与分析\" class=\"headerlink\" title=\"题解对比与分析\"></a>题解对比与分析</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>注意</strong>：以下数据都是在<strong>力扣</strong>中提交后返回的结果，每次提交都有可能不一致。所以相近的方案输出的结果有所差异也是正常的，最终<strong>最优方案要通过分析代码来确定</strong>，<strong>不能只以力扣输出的数据为准，只能供于我们作为参考</strong>。</p></blockquote>\n<table>\n<thead>\n<tr>\n<th>方法</th>\n<th>执行时间</th>\n<th>内存消耗</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>「方法一」- 统计 0 的个数</td>\n<td>96 ms（战胜 17.82%）</td>\n<td>37.1 MB</td>\n</tr>\n<tr>\n<td>「方法二」- 双指针交换</td>\n<td>72 ms（战胜 87.23%）</td>\n<td>37.2 MB</td>\n</tr>\n<tr>\n<td>「方法三」- 双指针替换后清零</td>\n<td>76 ms（战胜 73.98%）</td>\n<td>37.2 MB</td>\n</tr>\n</tbody></table>\n<p><strong>分析一下：</strong></p>\n<ul>\n<li>第一种方法是通过统计 0 出现的次数来定位到需要替换 0 的所在位置，里面涉及一个<code>i - zeroCount</code>的运算，所以相对其他方法来说运行时间会更长一些；</li>\n<li>第二个方法是通过两个指针一起运行，一个固定在 0 元素，一个一直走找到非 0 元素，最后做一个交换，这种方法没有涉及运算，同时也是一个循环就可以完成，相对来说是最优解；</li>\n<li>第三种方法也是用了双指针，与第二种方法的唯一区别就是先替换掉所有 0 的元素，最后把剩余的元素全部一次性替换成 0。可读性来说，个人觉得更容易懂，但是时间和空间复杂度和第二种方法是一致的。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200613135642518.png\"></p>\n<h1 id=\"11-题-盛最多水的容器\"><a href=\"#11-题-盛最多水的容器\" class=\"headerlink\" title=\"11 题 - 盛最多水的容器\"></a>11 题 - 盛最多水的容器</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://leetcode-cn.com/problems/container-with-most-water/\">283. 盛最多水的容器</a>｜<strong>难度</strong>：<font color=\"orange\">中等</font></p></blockquote>\n<h2 id=\"题目讲解-1\"><a href=\"#题目讲解-1\" class=\"headerlink\" title=\"题目讲解\"></a>题目讲解</h2><p>给你 n 个非负整数 a1，a2，…，an，每个数代表坐标中的一个点 (i, ai) 。在坐标内画 n 条垂直线，垂直线 i 的两个端点分别为 (i, ai) 和 (i, 0)。找出其中的两条线，使得它们与 x 轴共同构成的容器可以容纳最多的水。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>说明：你不能倾斜容器，且 n 的值至少为 2。</p></blockquote>\n<p><img src=\"https://img-blog.csdnimg.cn/20200624214839464.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70#pic_center\"></p>\n<p>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p>\n<p><strong>示例：</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入：[1,8,6,2,5,4,8,3,7]<br>输出：49</p></blockquote>\n<p><strong>题目重点：</strong></p>\n<ol>\n<li>首先我们的目标是挑选两条柱子，从而让两个柱子之前可以得出最大的面积（面积越大自然可容纳的水就越多）；</li>\n<li>挑选最长的两个柱子不等于拥有最大的面积，因为它们之间的距离也是决定空间的一个维度；</li>\n<li>所以重点是找到高度和宽度比例最大的一对柱子，从而得出最大面积；</li>\n<li>注意在运算面积时，我们只能用一对柱子中最短的一条作为高度，因为水只能填满到最短的那条柱子的高度；</li>\n<li>面积运算公式： <code>高度 x 宽度 = 面积</code></li>\n</ol>\n<h2 id=\"解题思路-1\"><a href=\"#解题思路-1\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li><p><strong>枚举</strong> —— 暴力解法</p>\n<ul>\n<li>遍历左边和右边，找出所有面积；</li>\n<li>列出所有柱子的组合；</li>\n<li>算出所有组合各自的面积；</li>\n<li>最后输出最大的面积的一组；</li>\n<li><strong>缺点：</strong>遍历次数过高，所以时间复杂度会相对偏高</li>\n<li><strong>复杂度</strong>：时间复杂度 $O(n^2)$、空间复杂度 $O(1)$</li>\n</ul>\n</li>\n<li><p><strong>双指针</strong></p>\n<ul>\n<li><p>左右两边都往中间移动；</p>\n</li>\n<li><p>需要移动左右两头的问题都可以考虑双指针；</p>\n</li>\n<li><p>相同情况下两遍距离越远越好；</p>\n</li>\n<li><p>区域受限于较短边的高度；</p>\n</li>\n<li><p>所以让较矮的那边的指针往内移动；</p>\n</li>\n<li><p>一直以上面的规则移动知道两个指针重合；</p>\n</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"解题代码-1\"><a href=\"#解题代码-1\" class=\"headerlink\" title=\"解题代码\"></a>解题代码</h2><p><strong>「方法一」</strong> - 枚举（暴力破解）：</p>\n<ul>\n<li>时间复杂度：$O(n^2)$ - 双循环，所以总计循环了 N^2。</li>\n<li>空间复杂度：$O(1)$</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number[]</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">height</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">maxArea</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">height</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">max</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">length</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">length</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">area</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">min</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">]</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">j</span><span style=\"color: #9ABDF5\">])</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">      </span><span style=\"color: #C0CAF5\">max</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">max</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">max</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">area</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">max</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><p><strong>「方法二」</strong> - 双指针：</p>\n<ul>\n<li>时间复杂度：$O(n)$ - 双指针总计最多遍历整个数组一次。</li>\n<li>空间复杂度：$O(1)$ - 只需要额外的常数级别的空间。</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number[]</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">height</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">maxArea</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">height</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">max</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">0</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7DCFFF\">length</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> ) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">minHeight</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #BB9AF7\">&lt;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">j</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #BB9AF7\">?</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #BB9AF7\">:</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">height</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">j</span><span style=\"color: #89DDFF\">--</span><span style=\"color: #9ABDF5\">]</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">area</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">j</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #89DDFF\">*</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">minHeight</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #C0CAF5\">max</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">max</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">max</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">area</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">max</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><h2 id=\"题解对比与分析-1\"><a href=\"#题解对比与分析-1\" class=\"headerlink\" title=\"题解对比与分析\"></a>题解对比与分析</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>执行时间（毫秒）</th>\n<th>内存消耗</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>枚举（暴力破解）</td>\n<td>984 ms （战胜 9.99%）</td>\n<td>35.9 MB</td>\n</tr>\n<tr>\n<td>双指针</td>\n<td>56 ms（战胜 99.88%）</td>\n<td>36 MB</td>\n</tr>\n</tbody></table>\n<p><strong>分析一下</strong></p>\n<ul>\n<li>通过使用第二种方法，我们从$O(n^2)$的时间复杂度降到$O(n)$，总的执行时间大概是<strong>快了 17 倍</strong>。</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/20200613135642518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RyaURpYW1vbmQ2,size_16,color_FFFFFF,t_70\"></p>\n<h1 id=\"70-题-爬楼梯\"><a href=\"#70-题-爬楼梯\" class=\"headerlink\" title=\"70 题 - 爬楼梯\"></a>70 题 - 爬楼梯</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><a href=\"https://leetcode-cn.com/problems/climbing-stairs/\">283. 移动零</a>｜<strong>难度</strong>：<font color=\"green\">简单</font></p></blockquote>\n<h2 id=\"题目讲解-2\"><a href=\"#题目讲解-2\" class=\"headerlink\" title=\"题目讲解\"></a>题目讲解</h2><p>假设你正在爬楼梯。需要 n 阶你才能到达楼顶。</p>\n<p>每次你可以爬 1 或 2 个台阶。你有多少种不同的方法可以爬到楼顶呢？</p>\n<p>注意：给定 n 是一个正整数。</p>\n<p>示例 1：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入： 2<br>输出： 2<br>解释： 有两种方法可以爬到楼顶。</p>\n<ol>\n<li>1 阶 + 1 阶</li>\n<li>2 阶</li>\n</ol></blockquote>\n<p>示例 2：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>输入： 3<br>输出： 3<br>解释： 有三种方法可以爬到楼顶。</p>\n<ol>\n<li>1 阶 + 1 阶 + 1 阶</li>\n<li>1 阶 + 2 阶</li>\n<li>2 阶 + 1 阶</li>\n</ol></blockquote>\n<h3 id=\"题解重点\"><a href=\"#题解重点\" class=\"headerlink\" title=\"题解重点\"></a>题解重点</h3><p>其实题目本身并不难，在力扣（LeetCode）是属于“简单”级别的题目，但是如果没有思路，或者对这个题目完全不了解的话，一点头绪都没有也是正常的，这种题目也就是<strong>属于套路题</strong>。如果我们是不知道的话，我们自然会难到不知道怎么做。我们要是知道了的话，那就变得相当容易了。</p>\n<p>这里讲一下解题的思想：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>首先我们解题时最大的误区是什么？</strong></p>\n<ul>\n<li>做题只做了一遍</li>\n<li>至少要做五遍</li>\n</ul>\n<p><strong>然后我们优化的思想是什么？</strong></p>\n<ul>\n<li>空间换时间</li>\n<li>升维思想（升级到二维）</li>\n</ul>\n<p><strong>看题时懵了怎么办？</strong></p>\n<ul>\n<li>首先我们能不能暴力破解？</li>\n<li>最基本的情况我们应该怎么解决？能否化繁为简？</li>\n</ul>\n<p><strong>破解所有问题的法则：</strong></p>\n<ul>\n<li><strong>找最近重复的子问题</strong></li>\n<li>为什么？因为写程序我们只能写<code>if</code>，<code>else</code>，<code>for</code>，<code>while</code>，<code>recursion</code>（递归）</li>\n<li>计算机是人类发明的，计算机肯定是没有人脑那么强的，它其实就是一个<strong>简单的重复式机器</strong></li>\n<li>那么计算机运行的程序也是同理，它是用重复的东西来解决问题的</li>\n<li>如果我们遇到算法题的时候，就是需要我们用程序去解决的问题，那<strong>问题的本身就是可重复的</strong></li>\n<li>无论是算法中的回述、分治、动态规划、递归等，全部都是在<strong>找重复性</strong>的原理</li>\n<li>所以重点都是“<strong>找规律</strong>”</li>\n</ul></blockquote>\n<h3 id=\"深度分析题目：\"><a href=\"#深度分析题目：\" class=\"headerlink\" title=\"深度分析题目：\"></a>深度分析题目：</h3><p>首先我们使用<strong>化繁为简</strong>的思维来分析：</p>\n<p>要到达第一个台阶，我们只能爬 1 个台阶，所以只有一种方法的可能性，所以 n &#x3D; 1 的时候，只有 1 种可能。</p>\n<p>那如果我们要到达第二个台阶，我们要不就是连续爬 2 次 1 个跨度，要不就是一次性爬两个台阶到达第二个台阶。所以有 2 种可能性。</p>\n<p>那如果是需要到达<strong>第三个台阶呢</strong>？</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里有个小技巧，要到达第三个台阶我们可以换一种思维去想，如果我们还是像第一个和第二个台阶的方式去列出可以到达第三个台阶的所有可能性，那如果<code>n</code>很大的时候，我们只靠人的大脑去想，那真的是太费劲了。但是这里有一个很巧妙的思维方式。</p>\n<br/>\n返过来想，我们想到达第三个台阶，只有两种可能可以到达：\n\n<ol>\n<li>要不就是从第二个台阶爬 1 个台阶到达</li>\n<li>要不就是从第一个台阶爬 2 个台阶到达</li>\n</ol>\n<br/>\n那其实如果是第四个台阶是不是也是一样的？\n\n<ol>\n<li>要不就是从第三个台阶爬 1 个台阶到达</li>\n<li>要不就是从第二个台阶爬 2 个台阶到达</li>\n</ol>\n<br/>\n这里就有一个`规律`了。要到达第`n`个台阶我们需要知道：\n\n<ol>\n<li>到达第<code>n-1</code>的台阶有多少种可能</li>\n<li>到达第<code>n-2</code>的台阶有多少种可能</li>\n<li>然后这两个相加就是到达第<code>n</code>的台阶有多少种可能</li>\n</ol></blockquote>\n<p>那其实这里就是老生常谈的<code>斐波拉次</code>数列:</p>\n<p>$f(n) &#x3D; f(n-1) + f(n-2)$</p>\n<h2 id=\"解题思路-2\"><a href=\"#解题思路-2\" class=\"headerlink\" title=\"解题思路\"></a>解题思路</h2><ol>\n<li><strong>斐波拉次（Fibonacci）</strong>- “傻递归“<ul>\n<li>直接使用递归循环使用斐波拉次公式即可</li>\n<li>但是时间复杂度就很高 - $O(2^n)$</li>\n</ul>\n</li>\n<li><strong>动态规划</strong><ul>\n<li>用上面讲到的原理，到达第<code>n</code>个台阶只需要：爬上 $n-1$ 台阶的方式数 + 爬上 $n - 2$ 台阶的方法数 &#x3D; 爬上第 $n$ 个台阶的方式数</li>\n<li>所以得出的公式是 $dp[n] &#x3D; dp[n-1] + dp[n-2]$</li>\n<li>同时需要初始化： $dp[0]&#x3D;1$ 和 $dp[1] &#x3D; 1$</li>\n<li>使用这种方式时间复杂度降到 $O(n)$</li>\n</ul>\n</li>\n<li>动态规划 2 - 只记录最后 3 个的方法量<ul>\n<li>与上面的动态规划的方法一样，但是这里我们只记录最后 3 个的台阶的爬楼方法数</li>\n<li>使用<code>f1</code>，<code>f2</code>，<code>f3</code>作为储存变量</li>\n<li>默认 $f1 &#x3D; 1$ 和 $f2 &#x3D; 2$ 即可</li>\n</ul>\n</li>\n<li>通项公式（Binet’s Formular ）<ul>\n<li>有观察数学规律的同学，或者数学比较好的同学，会发现本题是斐波那次数列，那么我们也可以用斐波那次的“通项公式”</li>\n<li>公式是：$F_n &#x3D; \\frac{1}{\\sqrt{5}}[(\\frac{1+\\sqrt{5}}{2})^n - (\\frac{1-\\sqrt{5}}{2})^n]$</li>\n<li>时间复杂度：$O(logn)$</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"解题代码-2\"><a href=\"#解题代码-2\" class=\"headerlink\" title=\"解题代码\"></a>解题代码</h2><p><strong>「方法一」斐波那次</strong></p>\n<ul>\n<li>时间复杂度：$O(2^n)$</li>\n<li>空间复杂度：$O(1)$</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">n</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">climbStairs</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">n</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">if</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">n</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #7AA2F7\">climbStairs</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #7AA2F7\">climbStairs</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><p><strong>「方法二」动态规划</strong></p>\n<ul>\n<li>时间复杂度：$O(n)$</li>\n<li>空间复杂度：$O(n)$</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">n</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">climbStairs</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">n</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">dp</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> []</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #C0CAF5\">dp</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #FF9E64\">0</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #C0CAF5\">dp</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #C0CAF5\">dp</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">dp</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\">] </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">dp</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #9ABDF5\">]</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">dp</span><span style=\"color: #9ABDF5\">[</span><span style=\"color: #7DCFFF\">n</span><span style=\"color: #9ABDF5\">]</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><p><strong>「方法三」动态规划 2</strong></p>\n<ul>\n<li>时间复杂度：$O(n)$</li>\n<li>空间复杂度：$O(1)$</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">n</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">climbStairs</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">n</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">if</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">n</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">f1</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7\">f2</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #89DDFF\">,</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #BB9AF7\">f3</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7\">for</span><span style=\"color: #9ABDF5\"> (</span><span style=\"color: #9D7CD8; font-style: italic\">let</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">3</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">&lt;=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">i</span><span style=\"color: #89DDFF\">++</span><span style=\"color: #9ABDF5\">) &#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #C0CAF5\">f3</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">f1</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">f2</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #C0CAF5\">f1</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">f2</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #C0CAF5\">f2</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">f3</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  &#125;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">f3</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><p><strong>「方法四」通项公式</strong></p>\n<ul>\n<li>时间复杂度：$O(logn)$</li>\n<li>空间复杂度：$O(1)$</li>\n</ul>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki \" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #444B6A; font-style: italic\">/**</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@param</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125; </span><span style=\"color: #5A638C; font-style: italic\">n</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> * </span><span style=\"color: #646E9C; font-style: italic\">@return</span><span style=\"color: #444B6A; font-style: italic\"> &#123;</span><span style=\"color: #646E9C; font-style: italic\">number</span><span style=\"color: #444B6A; font-style: italic\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #444B6A; font-style: italic\"> */</span></span>\n<span class=\"line\"><span style=\"color: #9D7CD8; font-style: italic\">var</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #7AA2F7\">climbStairs</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #BB9AF7\">function</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #E0AF68\">n</span><span style=\"color: #9ABDF5\">)</span><span style=\"color: #A9B1D6\"> </span><span style=\"color: #9ABDF5\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">sqrt_5</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">sqrt</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #FF9E64\">5</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #9D7CD8; font-style: italic\">const</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #BB9AF7\">fib_n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">=</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">    </span><span style=\"color: #C0CAF5\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">pow</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">sqrt_5</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">pow</span><span style=\"color: #9ABDF5\">((</span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">-</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">sqrt_5</span><span style=\"color: #9ABDF5\">) </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">2</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #FF9E64\">1</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">  </span><span style=\"color: #BB9AF7; font-style: italic\">return</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">Math</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #7AA2F7\">round</span><span style=\"color: #9ABDF5\">(</span><span style=\"color: #C0CAF5\">fib_n</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #89DDFF\">/</span><span style=\"color: #9ABDF5\"> </span><span style=\"color: #C0CAF5\">sqrt_5</span><span style=\"color: #9ABDF5\">)</span></span>\n<span class=\"line\"><span style=\"color: #9ABDF5\">&#125;</span></span></code></pre></div><h2 id=\"题解对比与分析-2\"><a href=\"#题解对比与分析-2\" class=\"headerlink\" title=\"题解对比与分析\"></a>题解对比与分析</h2><table>\n<thead>\n<tr>\n<th>方法</th>\n<th>执行时间（毫秒）</th>\n<th>内存消耗</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>「方法一」斐波那次</td>\n<td>超出时间限制</td>\n<td>N&#x2F;A</td>\n</tr>\n<tr>\n<td>「方法二」动态规划</td>\n<td>68 ms</td>\n<td>32.4 MB</td>\n</tr>\n<tr>\n<td>「方法三」动态规划 2</td>\n<td>53 ms</td>\n<td>32.3 MB</td>\n</tr>\n<tr>\n<td>「方法三」通项公式</td>\n<td>67 ms</td>\n<td>32.4 MB</td>\n</tr>\n</tbody></table>\n<p><strong>分析一下</strong></p>\n<ul>\n<li>按照时间复杂度来说，应该“<strong>通项公式</strong>”是性能最优的，但是力扣的执行时间不是很靠谱，这一点我在上面也说到，就不多解释了。</li>\n<li>所以最优解还是第三种方法“<strong>通项公式</strong>”</li>\n<li>接着就是“<strong>动态规划 2</strong>”，因为只储存了 3 个变量，第二种方法需要用到数组。在空间复杂度上就占了优势。</li>\n<li>而最后输一下傻瓜式的斐波那次递归，这种方法还没有执行完就已经被淘汰了。时间复杂度过高。</li>\n</ul>\n<h1 id=\"推荐专栏\"><a href=\"#推荐专栏\" class=\"headerlink\" title=\"推荐专栏\"></a>推荐专栏</h1><p>小伙伴们可以<strong>查看或者订阅相关的专栏</strong>，从而集中阅读相关知识的文章哦。</p>\n<ul>\n<li><p>📖 <a href=\"https://blog.csdn.net/tridiamond6/category_10036942.html\">《数据结构与算法》</a> — 到了如今，如果想成为一个高级开发工程师或者进入大厂，不论岗位是前端、后端还是 AI，算法都是重中之重。也无论我们需要进入的公司的岗位是否最后是做算法工程师，前提面试就需要考算法。</p>\n</li>\n<li><p>📖 <a href=\"https://blog.csdn.net/tridiamond6/category_9782493.html\">《FCC 前端集训营》</a> — 根据 FreeCodeCamp 的学习课程，一起深入浅出学习前端。稳固前端知识，一起在 FreeCodeCamp 获得证书</p>\n</li>\n<li><p>📖 <a href=\"https://blog.csdn.net/tridiamond6/category_9782493.html\">《前端星球》</a> — 以实战为线索，深入浅出前端多维度的知识点。内含有多方面的前端知识文章，带领不懂前端的童鞋一起学习前端，在前端开发路上童鞋一起燃起心中那团火 🔥</p>\n</li>\n</ul>\n","text":"练题法则5-10 分钟读题与思考 不要纠结没有思路就直接看题解； 不要死磕觉得自己很失败，怎么我们就想不出来； 基本上这些算法题，让我们自己想出来是不可能的； ...","permalink":"/post/1781b683e9507c36c168e35402e3a5a4","photos":[],"count_time":{"symbolsCount":"8.7k","symbolsTime":"8 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":4,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"LeetCode","slug":"LeetCode","count":1,"path":"api/tags/LeetCode.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BB%83%E9%A2%98%E6%B3%95%E5%88%99\"><span class=\"toc-text\">练题法则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%93%AA%E9%87%8C%E7%BB%83%E9%A2%98%EF%BC%9F\"><span class=\"toc-text\">在哪里练题？</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#283-%E9%A2%98-%E7%A7%BB%E5%8A%A8%E9%9B%B6\"><span class=\"toc-text\">283 题 - 移动零</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%AE%B2%E8%A7%A3\"><span class=\"toc-text\">题目讲解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">解题思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">解题代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BE%B9%E7%95%8C%E6%B5%8B%E8%AF%95%E7%94%A8%E4%BE%8B\"><span class=\"toc-text\">边界测试用例</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%E5%AF%B9%E6%AF%94%E4%B8%8E%E5%88%86%E6%9E%90\"><span class=\"toc-text\">题解对比与分析</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#11-%E9%A2%98-%E7%9B%9B%E6%9C%80%E5%A4%9A%E6%B0%B4%E7%9A%84%E5%AE%B9%E5%99%A8\"><span class=\"toc-text\">11 题 - 盛最多水的容器</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%AE%B2%E8%A7%A3-1\"><span class=\"toc-text\">题目讲解</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-1\"><span class=\"toc-text\">解题思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">解题代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%E5%AF%B9%E6%AF%94%E4%B8%8E%E5%88%86%E6%9E%90-1\"><span class=\"toc-text\">题解对比与分析</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#70-%E9%A2%98-%E7%88%AC%E6%A5%BC%E6%A2%AF\"><span class=\"toc-text\">70 题 - 爬楼梯</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E7%9B%AE%E8%AE%B2%E8%A7%A3-2\"><span class=\"toc-text\">题目讲解</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%E9%87%8D%E7%82%B9\"><span class=\"toc-text\">题解重点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B7%B1%E5%BA%A6%E5%88%86%E6%9E%90%E9%A2%98%E7%9B%AE%EF%BC%9A\"><span class=\"toc-text\">深度分析题目：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E6%80%9D%E8%B7%AF-2\"><span class=\"toc-text\">解题思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E9%A2%98%E4%BB%A3%E7%A0%81-2\"><span class=\"toc-text\">解题代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%98%E8%A7%A3%E5%AF%B9%E6%AF%94%E4%B8%8E%E5%88%86%E6%9E%90-2\"><span class=\"toc-text\">题解对比与分析</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E8%8D%90%E4%B8%93%E6%A0%8F\"><span class=\"toc-text\">推荐专栏</span></a></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/bennyxguo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"44关学习CSS与CSS3基础「二」","uid":"bf711582d656c68e5bb5b6ce2c895348","slug":"bf711582d656c68e5bb5b6ce2c895348","date":"2020-07-11T16:19:24.000Z","updated":"2023-09-12T18:14:52.332Z","comments":true,"path":"api/articles/bf711582d656c68e5bb5b6ce2c895348.json","keywords":null,"cover":"https://source.unsplash.com/N4wqYiRZrLI/1200x628","text":"我有一段时间没有更新 FCC 前端教程了，这一周就继续写完 CSS 与 CSS3 基础的教程。最近工作和生活都比较繁忙所以文章更新也受到了一定的影响。不过技术文...","permalink":"/post/bf711582d656c68e5bb5b6ce2c895348","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":10,"path":"api/categories/FrontEnd.json"}],"tags":[{"name":"HTML&CSS","slug":"HTML-CSS","count":4,"path":"api/tags/HTML-CSS.json"},{"name":"Free Code Camp","slug":"Free-Code-Camp","count":3,"path":"api/tags/Free-Code-Camp.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/bennyxguo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"用动图解说数组、链表、跳表原理与实现","uid":"340fc57e8e2087786aea08a4e455e6c0","slug":"340fc57e8e2087786aea08a4e455e6c0","date":"2020-06-14T09:50:24.000Z","updated":"2023-09-12T18:14:52.332Z","comments":true,"path":"api/articles/340fc57e8e2087786aea08a4e455e6c0.json","keywords":null,"cover":"https://source.unsplash.com/9KcHl3Tp79k/1200x628","text":"「初」前言在学习数据结构与算法的过程中，感觉真的是一入算法深似海，但是越学越觉得有趣。不过我们会发现在终身学习的过程中，我们都是越学越多，不知的也越来越多，但是...","permalink":"/post/340fc57e8e2087786aea08a4e455e6c0","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":4,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"Linked List","slug":"Linked-List","count":1,"path":"api/tags/Linked-List.json"},{"name":"Array","slug":"Array","count":1,"path":"api/tags/Array.json"},{"name":"Jump List","slug":"Jump-List","count":1,"path":"api/tags/Jump-List.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/bennyxguo","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}