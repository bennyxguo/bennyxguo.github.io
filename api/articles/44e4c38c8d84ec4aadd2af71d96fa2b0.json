{"title":"Lumen passport实现多个用户体系下的oauth验证","uid":"44e4c38c8d84ec4aadd2af71d96fa2b0","slug":"44e4c38c8d84ec4aadd2af71d96fa2b0","date":"2019-01-10T01:40:41.000Z","updated":"2023-08-22T04:44:05.507Z","comments":true,"path":"api/articles/44e4c38c8d84ec4aadd2af71d96fa2b0.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","content":"<p>这个教程是基于, lumen里面已经安装好了lumen-passport的插件, 如果还没有的话可以先到<a href=\"/2019/01/10/2019-01-10-lumen-passport-usage/\">lumen使用laravel passport教程</a>先安装.</p>\n<h2 id=\"改写Laravel-Passport里面的UserRepository\"><a href=\"#改写Laravel-Passport里面的UserRepository\" class=\"headerlink\" title=\"改写Laravel Passport里面的UserRepository\"></a>改写Laravel Passport里面的<code>UserRepository</code></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>文件路径 <code>vendor\\laravel\\passport\\src\\Bridge\\UserRepository.php</code></p></blockquote>\n<ul>\n<li><p>首先需要改写<code>userRepositroy</code>里面的<code>getUserEntityByUserCredentials</code>方法</p>\n</li>\n<li><p>复制<code>userRepositroy</code>里面的<code>getUserEntityByUserCredentials</code>方法, 改名为<code>getEntityByUserCredentials</code></p>\n</li>\n<li><p>在新建的方法里面找到一下代码</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$provider &#x3D; config(&#39;auth.guards.api.provider&#39;);</code></pre>\n\n<p>改成一下样子</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$provider &#x3D; config(&#39;auth.guards.&#39;.$provider.&#39;.provider&#39;);</code></pre>\n\n<ul>\n<li>然后在新的方法<code>getEntityByUserCredentials</code>的参数里面添加新的参数<code>$provider</code></li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">public function getEntityByUserCredentials($username, $password, $grantType, \n  ClientEntityInterface $clientEntity, $provider) &#123;\n      &#x2F;&#x2F;...\n&#125;</code></pre>\n\n<h2 id=\"修改oauth2-server里面的PasswordGrand\"><a href=\"#修改oauth2-server里面的PasswordGrand\" class=\"headerlink\" title=\"修改oauth2-server里面的PasswordGrand\"></a>修改oauth2-server里面的PasswordGrand</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>文件路径 <code>vendor\\league\\oauth2-server\\src\\Grant\\PasswordGrant.php</code></p></blockquote>\n<ul>\n<li>修改<code>validateUser</code>方法里面的这一串代码:</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$user &#x3D; $this-&gt;userRepository-&gt;getEntityByUserCredentials(\n    $username,\n    $password,\n    $this-&gt;getIdentifier(),\n    $client,\n    $provider &#x2F;&#x2F; 新加的provider字段\n);</code></pre>\n\n<ul>\n<li>在同一个方法里面加入新参数的获取</li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">$provider &#x3D; $this-&gt;getRequestParameter(&#39;provider&#39;, $request);\n\nif (is_null($provider)) &#123;\nthrow OAuthServerException::invalidRequest(&#39;provider&#39;);\n&#125;</code></pre>\n\n<h2 id=\"在auth-php配置里面加入新的guard\"><a href=\"#在auth-php配置里面加入新的guard\" class=\"headerlink\" title=\"在auth.php配置里面加入新的guard\"></a>在auth.php配置里面加入新的guard</h2><p>首先需要加入新的guard配置</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&#39;guards&#39; &#x3D;&gt; [\n    &#x2F;&#x2F; 原有的api guard\n    &#39;api&#39; &#x3D;&gt; [\n        &#39;driver&#39; &#x3D;&gt; &#39;passport&#39;,\n        &#39;provider&#39; &#x3D;&gt; &#39;users&#39;,\n    ],\n    &#x2F;&#x2F; 新加的admin-api guard\n    &#39;admin-api&#39; &#x3D;&gt; [\n        &#39;driver&#39; &#x3D;&gt; &#39;passport&#39;,\n        &#39;provider&#39; &#x3D;&gt; &#39;admins&#39;,\n    ],\n],</code></pre>\n\n<p>添加新<code>admin-api</code> guard的provider</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&#39;providers&#39; &#x3D;&gt; [\n    &#39;users&#39; &#x3D;&gt; [\n        &#39;driver&#39; &#x3D;&gt; &#39;eloquent&#39;,\n        &#39;model&#39; &#x3D;&gt; \\App\\Models\\General\\MemberLogin::class\n    ],\n    &#x2F;&#x2F; 新加的admins provider对应不用的用户模型\n    &#39;admins&#39; &#x3D;&gt; [\n        &#39;driver&#39; &#x3D;&gt; &#39;eloquent&#39;,\n        &#39;model&#39; &#x3D;&gt; \\App\\Models\\Backend\\Manager::class\n    ]\n],</code></pre>\n\n<h2 id=\"路由middleware使用\"><a href=\"#路由middleware使用\" class=\"headerlink\" title=\"路由middleware使用\"></a>路由middleware使用</h2><p>区别在于middleware, 上文加入的新<code>admin-api</code>guard, 在新的路由里面就可以使用<code>auth:admin-api</code>的权限验证中间件理实现权限控制了!</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&#x2F;*\n|--------------------------------------------------------------------------\n| Admin API版本 v1 路由\n|--------------------------------------------------------------------------.\n|\n| prefix admin&#x2F;api&#x2F;api版本号\n| namespace Api\\api版本号\n|\n*&#x2F;\n$app-&gt;group([&#39;prefix&#39; &#x3D;&gt; &#39;admin&#x2F;api&#x2F;v1&#39;, &#39;namespace&#39; &#x3D;&gt; &#39;AdminApi\\V1&#39;], function ($app) &#123;\n\n    &#x2F;&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 不受登录权限控制的接口路由 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x2F;&#x2F;\n    &#x2F;&#x2F;测试\n    $app-&gt;get(&#39;test&#39;, &#39;ExampleController@test&#39;);\n\n    &#x2F;&#x2F; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; 受登录权限控制的接口路由 &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x2F;&#x2F;\n    $app-&gt;group([&#39;middleware&#39; &#x3D;&gt; &#39;auth:admin-api&#39;], function ($app) &#123;\n        &#x2F;&#x2F;测试\n        $app-&gt;get(&#39;test2&#39;, function()&#123;\n            return &#39;oauth test&#39;;\n        &#125;);\n        &#x2F;&#x2F;测试\n        $app-&gt;get(&#39;test3&#39;, &#39;ExampleController@test&#39;);\n    &#125;);\n\n&#125;);</code></pre>\n\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><p>使用了多个guard的时候, 在使用laravel默认的<code>$request-&gt;user()</code>, 这个方法默认是使用<code>api</code>guard的, 可以在<code>auth.php</code>配置里面看到默认guard的配置.</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&#x2F;*\n|--------------------------------------------------------------------------\n| Authentication Defaults\n|--------------------------------------------------------------------------\n|\n| This option controls the default authentication &quot;guard&quot; and password\n| reset options for your application. You may change these defaults\n| as required, but they&#39;re a perfect start for most applications.\n|\n*&#x2F;\n\n&#39;defaults&#39; &#x3D;&gt; [\n    &#39;guard&#39; &#x3D;&gt; env(&#39;AUTH_GUARD&#39;, &#39;api&#39;),\n    &#39;passwords&#39; &#x3D;&gt; &#39;users&#39;,\n],</code></pre>\n\n<p>所以在使用新的<code>admin-api</code> guard的时候在使用<code>$request-&gt;user()</code>时需要加入对应的guard. 例子:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">namespace App\\Http\\Controllers\\AdminApi\\V1;\n\nuse App\\Http\\Controllers\\Controller;\nuse Illuminate\\Http\\Request;\nuse Illuminate\\Support\\Facades\\Cache;\n\nclass ExampleController extends Controller\n&#123;\n    public function test(Request $request)\n    &#123;\n        $request-&gt;user(&#39;admin-api&#39;)-&gt;toArray(); &#x2F;&#x2F; 获取到admin-api下的用户信息\n    &#125;\n&#125;</code></pre>\n\n","text":"这个教程是基于, lumen里面已经安装好了lumen-passport的插件, 如果还没有的话可以先到lumen使用laravel passport教程先安装...","link":"","photos":[],"count_time":{"symbolsCount":"4.7k","symbolsTime":"4 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%94%B9%E5%86%99Laravel-Passport%E9%87%8C%E9%9D%A2%E7%9A%84UserRepository\"><span class=\"toc-text\">改写Laravel Passport里面的UserRepository</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9oauth2-server%E9%87%8C%E9%9D%A2%E7%9A%84PasswordGrand\"><span class=\"toc-text\">修改oauth2-server里面的PasswordGrand</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8auth-php%E9%85%8D%E7%BD%AE%E9%87%8C%E9%9D%A2%E5%8A%A0%E5%85%A5%E6%96%B0%E7%9A%84guard\"><span class=\"toc-text\">在auth.php配置里面加入新的guard</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%B7%AF%E7%94%B1middleware%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">路由middleware使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Lumen 使用 laravel passport","uid":"856e8266ee6e8a15c82abdb9b8c2a650","slug":"856e8266ee6e8a15c82abdb9b8c2a650","date":"2019-01-10T01:51:23.000Z","updated":"2023-08-22T04:44:05.507Z","comments":true,"path":"api/articles/856e8266ee6e8a15c82abdb9b8c2a650.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571213684/blog/lumn_cover_uujop9.png","text":"Lumen是laravel的简洁版, 把laravel里面深重的依赖都去掉了, 所以直接安装laravel的passport是无法正常使用的.所以如果要在lum...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"},{"name":"Lumen","slug":"Lumen","count":2,"path":"api/tags/Lumen.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"IONIC 2 实现首页双击退出APP","uid":"b9c619014fc7379786141900ce0e39ef","slug":"b9c619014fc7379786141900ce0e39ef","date":"2017-04-24T00:00:00.000Z","updated":"2023-08-22T04:44:05.507Z","comments":true,"path":"api/articles/b9c619014fc7379786141900ce0e39ef.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571186961/blog/ionic_cover_hvzkwo.png","text":"添加绑定值 首先在app/app.html下加入#myNav, 这个是用于绑定当前页面的导航标签 &lt;ion-nav #myNav [root]&#x3D;...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"Ionic","slug":"Ionic","count":6,"path":"api/categories/Ionic.json"}],"tags":[{"name":"Ionic 2","slug":"Ionic-2","count":3,"path":"api/tags/Ionic-2.json"},{"name":"Hybird App","slug":"Hybird-App","count":6,"path":"api/tags/Hybird-App.json"},{"name":"Angular 4","slug":"Angular-4","count":4,"path":"api/tags/Angular-4.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}