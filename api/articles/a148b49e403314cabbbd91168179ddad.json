{"title":"IONIC 2 开发笔记","uid":"a148b49e403314cabbbd91168179ddad","slug":"a148b49e403314cabbbd91168179ddad","date":"2017-02-25T00:00:00.000Z","updated":"2023-08-22T04:44:05.507Z","comments":true,"path":"api/articles/a148b49e403314cabbbd91168179ddad.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571186961/blog/ionic_cover_hvzkwo.png","content":"<p>因为IONIC2才刚刚开始进入正式版, 中文文档基本都是不全的, 我现在开发都是在看英文文档<br>在开发的过程中遇到了很多文档没有描述的问题, 而且开发的过程中遇到一些框架本身没有完善的功能和存在的BUG</p>\n<p>我会在这个日记里面记录一些文档没有写的, 和我开发过程中遇到的一些坑和经验, 希望可以帮助那些刚刚接触IONIC2的程序猿们!</p>\n<h2 id=\"APP配置\"><a href=\"#APP配置\" class=\"headerlink\" title=\"APP配置\"></a>APP配置</h2><h3 id=\"域名配置\"><a href=\"#域名配置\" class=\"headerlink\" title=\"域名配置\"></a>域名配置</h3><p>因为跨域问题，在开发时如果要用到本地环境进行开发(ionic serve)，必须配置proxy</p>\n<ul>\n<li>Proxy位于项目根目录下的 <strong>ionic.config.json</strong></li>\n</ul>\n<ul>\n<li>只需要把<strong>proxyUrl</strong>改为你本地环境的API地址</li>\n</ul>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#123;\n  &quot;name&quot;: &quot;rlph&quot;,\n  &quot;app_id&quot;: &quot;&quot;,\n  &quot;v2&quot;: true,\n  &quot;typescript&quot;: true,\n  &quot;proxies&quot;: [\n    &#123;\n      &quot;path&quot;: &quot;&#x2F;api&quot;,\n      &quot;proxyUrl&quot;: &quot;http:&#x2F;&#x2F;api.dev&quot;\n    &#125;\n  ]\n&#125;</code></pre>\n\n<ul>\n<li>然后把API地址的常量制定为**&#x2F;api&#x2F;**这个proxy</li>\n</ul>\n<ul>\n<li>在根目录下**&#x2F;src&#x2F;config.ts<strong>里面把</strong>“API_SERVER”<strong>的值改为</strong>“&#x2F;api&#x2F;“**</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export let data &#x3D; &#123;\n    &quot;API_SERVER&quot; : &quot;&#x2F;api&#x2F;&quot;\n&#125;</code></pre>\n\n\n<h3 id=\"上线APP配置\"><a href=\"#上线APP配置\" class=\"headerlink\" title=\"上线APP配置\"></a>上线APP配置</h3><ul>\n<li>首先你需要配置真是服务器API地址<br>配置API地址是在根目录下**&#x2F;src&#x2F;config.ts<strong>里面把</strong>“API_SERVER”**的值改为线上API地址</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">export let data &#x3D; &#123;\n    &quot;API_SERVER&quot; : &quot;http:&#x2F;&#x2F;api.domain.com&#x2F;&quot;\n&#125;</code></pre>\n\n<h2 id=\"开发常见问题\"><a href=\"#开发常见问题\" class=\"headerlink\" title=\"开发常见问题\"></a>开发常见问题</h2><h3 id=\"APP-run-失败\"><a href=\"#APP-run-失败\" class=\"headerlink\" title=\"APP run 失败\"></a>APP run 失败</h3><p>当运行<strong>ionic run android</strong>的时候可能会遇到该报错：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">Error: Failed to install apk to device: [  1%] &#x2F;data&#x2F;local&#x2F;tmp&#x2F;android-debug.apk\n[  2%] &#x2F;data&#x2F;local&#x2F;tmp&#x2F;android-debug.apk\n...\n[100%] &#x2F;data&#x2F;local&#x2F;tmp&#x2F;android-debug.apk\n        pkg: &#x2F;data&#x2F;local&#x2F;tmp&#x2F;android-debug.apk\nFailure [INSTALL_FAILED_UPDATE_INCOMPATIBLE]</code></pre>\n\n<ul>\n<li>此问题是因为已有签名的APP存在手机上， 需要想删除该APP才能安装测试（debug）版的apk</li>\n<li>在cmd运行以下代码即可解决问题：</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">adb uninstall my.package.id</code></pre>\n\n\n<h3 id=\"Ionic-2-自带的native文件上传-FILE-TRANSFER-插件无法获取成功返回内容\"><a href=\"#Ionic-2-自带的native文件上传-FILE-TRANSFER-插件无法获取成功返回内容\" class=\"headerlink\" title=\"Ionic 2 自带的native文件上传(FILE TRANSFER)插件无法获取成功返回内容\"></a>Ionic 2 自带的native文件上传(FILE TRANSFER)插件无法获取成功返回内容</h3><p>这个是Ionic 2 核心代码里面的一个BUG, 在一下版本下是有问题的<br><strong>Ionic CLI Version: 2.2.1</strong></p>\n<ul>\n<li>首先找到项目根目录下以下路径里面的<strong>filetransfer.d.ts</strong>文件</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">node_modules\\ionic-native\\dist\\es5\\plugins\\filetransfer.d.ts\nnode_modules\\ionic-native\\dist\\esm\\plugins\\filetransfer.d.ts</code></pre>\n\n<ul>\n<li>分别修改以上两个文件里面的代码</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&#x2F;&#x2F;把这一行:\nupload(fileUrl: string, url: string, options?: FileUploadOptions, trustAllHosts?: boolean): Promise&lt;FileUploadResult | FileTransferError&gt;\n&#x2F;&#x2F;改为: \nupload(fileUrl: string, url: string, options?: FileUploadOptions, trustAllHosts?: boolean): Promise&lt;FileUploadResult&gt;</code></pre>\n\n\n<h3 id=\"在安卓下使用相册选择时-返回的图片路径不能再显示问题\"><a href=\"#在安卓下使用相册选择时-返回的图片路径不能再显示问题\" class=\"headerlink\" title=\"在安卓下使用相册选择时, 返回的图片路径不能再显示问题\"></a>在安卓下使用相册选择时, 返回的图片路径不能再显示问题</h3><ul>\n<li>首先在这个例子使用的是cordova-plugin-camera组件(Cordova的相机插件)</li>\n<li>首先引入需要的类</li>\n<li>FilePath 这个类就是用来修复安卓上图片URI的问题的</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">import &#123; Camera, File, FilePath &#125; from &#39;ionic-native&#39;;</code></pre>\n\n<ul>\n<li>使用 FilePath.resolveNativePath(imagePath) 这个方法来纠正图片URI</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">Camera.getPicture(options).then((imagePath) &#x3D;&gt; &#123;\n &#x2F;&#x2F; 特殊安卓图片库的处理\n this.nativeFilePath &#x3D; imagePath;\n if (this.pl.is(&#39;android&#39;) &amp;&amp; sourceType &#x3D;&#x3D;&#x3D; Camera.PictureSourceType.PHOTOLIBRARY) &#123;\n   FilePath.resolveNativePath(imagePath)\n   .then(filePath &#x3D;&gt; &#123;\n       this.nativeFilePath &#x3D; filePath;\n       let currentName &#x3D; imagePath.substring(imagePath.lastIndexOf(&#39;&#x2F;&#39;) + 1, imagePath.lastIndexOf(&#39;?&#39;));\n   &#125;);\n &#125; else &#123;\n   var currentName &#x3D; imagePath.substr(imagePath.lastIndexOf(&#39;&#x2F;&#39;) + 1);\n &#125;\n&#125;, err &#x3D;&gt; &#123;\n &#x2F;&#x2F; this.presentToast(&#39;选择图片失败.&#39;);\n&#125;);</code></pre>\n\n","text":"因为IONIC2才刚刚开始进入正式版, 中文文档基本都是不全的, 我现在开发都是在看英文文档在开发的过程中遇到了很多文档没有描述的问题, 而且开发的过程中遇到一...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Ionic","slug":"Ionic","count":6,"path":"api/categories/Ionic.json"}],"tags":[{"name":"Ionic 2","slug":"Ionic-2","count":3,"path":"api/tags/Ionic-2.json"},{"name":"Angular 2","slug":"Angular-2","count":2,"path":"api/tags/Angular-2.json"},{"name":"Hybird App","slug":"Hybird-App","count":6,"path":"api/tags/Hybird-App.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#APP%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">APP配置</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%9F%E5%90%8D%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">域名配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%8A%E7%BA%BFAPP%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">上线APP配置</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">开发常见问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#APP-run-%E5%A4%B1%E8%B4%A5\"><span class=\"toc-text\">APP run 失败</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Ionic-2-%E8%87%AA%E5%B8%A6%E7%9A%84native%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0-FILE-TRANSFER-%E6%8F%92%E4%BB%B6%E6%97%A0%E6%B3%95%E8%8E%B7%E5%8F%96%E6%88%90%E5%8A%9F%E8%BF%94%E5%9B%9E%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">Ionic 2 自带的native文件上传(FILE TRANSFER)插件无法获取成功返回内容</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E5%AE%89%E5%8D%93%E4%B8%8B%E4%BD%BF%E7%94%A8%E7%9B%B8%E5%86%8C%E9%80%89%E6%8B%A9%E6%97%B6-%E8%BF%94%E5%9B%9E%E7%9A%84%E5%9B%BE%E7%89%87%E8%B7%AF%E5%BE%84%E4%B8%8D%E8%83%BD%E5%86%8D%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">在安卓下使用相册选择时, 返回的图片路径不能再显示问题</span></a></li></ol></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"Laravel 5.4 开发笔记","uid":"125c86bde17506b74edca579610bbf0d","slug":"125c86bde17506b74edca579610bbf0d","date":"2017-02-26T00:00:00.000Z","updated":"2023-08-22T04:44:05.507Z","comments":true,"path":"api/articles/125c86bde17506b74edca579610bbf0d.json","keywords":null,"cover":"https://s2.ax1x.com/2019/09/18/noYn41.png","text":"Laravel最近出的Laravel5.4新加了挺多功能的, 比起我用了1年的5.1完善多了. 比较吸引我使用最新的5.4的有几点: 5.4 添加了谷歌内核的浏...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel 5.4","slug":"Laravel-5-4","count":1,"path":"api/tags/Laravel-5-4.json"},{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://ik.imagekit.io/bennyxguo/ObsidianestLogo-hex_hecqbw.png?updatedAt=1692679397324","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{}}