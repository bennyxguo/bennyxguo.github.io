{"title":"44关学习CSS与CSS3基础「二」","uid":"bf711582d656c68e5bb5b6ce2c895348","slug":"frontend/fcc-css3-basics-2","date":"2020-07-11T16:19:24.000Z","updated":"2023-07-25T14:47:10.197Z","comments":true,"path":"api/articles/frontend/fcc-css3-basics-2.json","keywords":null,"cover":"https://source.unsplash.com/N4wqYiRZrLI/1200x628","content":"<p>我有一段时间没有更新 FCC 前端教程了，这一周就继续写完 CSS 与 CSS3 基础的教程。最近工作和生活都比较繁忙所以文章更新也受到了一定的影响。不过技术文章写作再忙也不会放弃的。我会继续努力坚持着一周一篇文章的进度，继续为大家带来我学习到的知识。让我们一起继续终身学习吧！</p>\n<p>这一篇文章是上一篇《<a href=\"https://tridiamond.blog.csdn.net/article/details/106048140\">44 关学习 CSS 与 CSS3 基础「一」</a>》的第二部分，一共闯了 44 关。废话少说，让我们一起来闯关吧！</p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第二十三关」使用属性选择器改变元素属性\"><a href=\"#「第二十三关」使用属性选择器改变元素属性\" class=\"headerlink\" title=\"「第二十三关」使用属性选择器改变元素属性\"></a>「第二十三关」使用属性选择器改变元素属性</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use Attribute Selectors to Style Elements</code></p></blockquote>\n<h2 id=\"知识点\"><a href=\"#知识点\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>之前我们使用了<code>id</code>和<code>class</code>属性选择器给特定的元素改变样式；</li>\n<li>这种方式叫做<code>ID</code>和<code>CLASS</code>选择器；</li>\n<li>除了这两种 CSS 选择器之外，还有其他选择让我们选择一组自定义的元素来改变样式的；</li>\n<li>我们把<strong>CatPhotoApp</strong>拿出来练习其他 CSS 选择器；</li>\n<li>在这个关卡中我们将使用<code>[attr=value]</code>（属性&#x3D;值）这种属性选择来给我们的 <strong>checkboxes</strong> （复选框）添加样式；</li>\n<li>这个选择器匹配特殊的属性值，然后对这个属性做出样式的改变；</li>\n</ul>\n<p>比如一下例子，所有<code>type</code>属性值为<code>radio</code>的元素加入 <strong>margin</strong>（外边距）做出改变：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">[type&#x3D;&#39;radio&#39;] &#123;\n  margin: 20px 0px 20px 0px;\n&#125;</code></pre>\n\n<h2 id=\"过关目标\"><a href=\"#过关目标\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>使用属性选择器，选中所有<code>type</code>属性为复选框的元素；</li>\n<li>并且给与这些元素 <strong>10px</strong> 的顶部外边距和 <strong>15px</strong> 的底部外边距；</li>\n</ul>\n<h2 id=\"过关条件\"><a href=\"#过关条件\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>type</code>属性选择器必须用来选中所有复选框；</li>\n<li>所有复选框的顶部 margin 必须是 10px；</li>\n<li>所有复选框的底部 margin 必须是 15px；</li>\n</ul>\n<h2 id=\"学会了什么？\"><a href=\"#学会了什么？\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>使用属性选择器来改变元素的样式；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案\"><a href=\"#答案\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200706160100722.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第二十四关」绝对与相对单位\"><a href=\"#「第二十四关」绝对与相对单位\" class=\"headerlink\" title=\"「第二十四关」绝对与相对单位\"></a>「第二十四关」绝对与相对单位</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Understand Absolute versus Relative Units</code></p></blockquote>\n<h2 id=\"知识点-1\"><a href=\"#知识点-1\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>之前所有的关卡中，我们都是给元素的 margin 和 padding 赋予“<strong>像素（pixels&#x2F;px）</strong>”单位；</li>\n<li>像素是一个浏览器使用的长度单位，这个单位会告诉浏览器给予一个元素多少大小和空间；</li>\n<li>在 CSS 当中除了 <code>px</code> 单位之外，还可以使用其他可选的单位；</li>\n<li>可用单位主要分为两种 <strong>绝对单位（absolute）</strong> 和 <strong>相对单位（relative）</strong><ul>\n<li>绝对单位有 <code>in</code>（英寸） 和 <code>mm</code> （厘米），绝对长度单位近似于屏幕上的实际测量值，但是根据屏幕的分辨率会有一些差异；</li>\n<li>相对单位有 <code>em</code> 或者 <code>rem</code>, 两者分别都是相对单位，都会根据一个相对的元素转换自己的大小；</li>\n</ul>\n</li>\n</ul>\n<p><strong>那么 <code>em</code> 和 <code>rem</code> 有什么区别呢？</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>EM 是相对长度，它是相对于当前元素的字体大小，如果当前元素没有设置字体大小就会一直往父级找，然后相对于父级字体大小来转换。</p>\n<p><strong>EM 特性：</strong></p>\n<ol>\n<li>em 的值并不是固定的；</li>\n<li>em 会基层父级元素的字体大小；</li>\n<li>如果父级也是使用了 em 长度单位，那当前元素的 em 换算就会使用父级 em 换算后的结果进行换算。（比如父级使用了 1.2em，换算后是 12px，那当前元素用的 1em 就是 12px，但是我们想要的是 1em &#x3D; 10px，这种情况用 em 就会出现大小错误。）</li>\n</ol></blockquote>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>REM 是 CSS3 新增的一个相对单位，它是 root em 的缩写，顾名思义就是根 em。</p>\n<p><strong>REM 特性：</strong></p>\n<ol>\n<li>它与 EM 不一样的是，因为是”根”em，所以它永远都是相对于 HTML 根元素的字体大小；</li>\n<li>与 EM 相同的就是值并不是固定的，都是相对一个元素的字体大小；</li>\n<li>因为 REM 的特性是相对于 HTML 根元素，所以只要改变根元素的字体大小，就会对所有 REM 单位的元素发生大小变化；</li>\n<li>除了 IE8 及更早版本的浏览器内核，所有浏览器均支持 REM；</li>\n<li>对于不支持的浏览器来说，我们就需要加入一个 px 单位的 font-size 属性，如果浏览器发现无法使用 rem 即会使用 px 单位的 font-size 值；</li>\n<li>这个单位可谓集合相对和绝对单位的优点与一身，所以此单位引起了广泛的使用，特别是在做移动端网页时，用于响应不同手机屏幕大小和分辨率大小；</li>\n</ol></blockquote>\n<p>这些相对单位的使用会在《响应式页面开发》的关卡中详细介绍使用场景。</p>\n<h2 id=\"过关目标-1\"><a href=\"#过关目标-1\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>给拥有<code>red-box</code>类的元素加入 <code>padding</code> 属性，值为 <code>1.5em</code>；</li>\n</ul>\n<h2 id=\"过关条件-1\"><a href=\"#过关条件-1\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>red-box</code>类元素必须含有 <code>padding</code> 属性；</li>\n<li><code>red-box</code>类元素的<code>padding</code>属性值必须为<code>1.5em</code>；</li>\n</ul>\n<h2 id=\"学会了什么？-1\"><a href=\"#学会了什么？-1\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>认识“像素（px）”以外的大小单位；</li>\n<li>认识什么是绝对与相对大小单位，并且分别拥有那些单位可以使用；</li>\n<li>如何使用<code>em</code>，这种相对单位；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-1\"><a href=\"#答案-1\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/202007061718366.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第二十五关」HTML-主体属性样式\"><a href=\"#「第二十五关」HTML-主体属性样式\" class=\"headerlink\" title=\"「第二十五关」HTML 主体属性样式\"></a>「第二十五关」HTML 主体属性样式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Style the HTML Body Element</code></p></blockquote>\n<h2 id=\"知识点-2\"><a href=\"#知识点-2\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>这一关开始，我们重新开始一个页面，并且一起来学习<strong>CSS 继承</strong>；</li>\n<li>首先每一个 HTML 页面都会有一个<code>body</code>元素；</li>\n<li>这一关我们用<code>background-color</code>属性给<code>body</code>元素一个背景颜色为<code>black</code>；</li>\n<li>如果这时页面变成了黑色，证明我们页面中是有<code>body</code>元素的；</li>\n</ul>\n<p>以下例子演示如何给<code>body</code>应用一个黑色背景的代码：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">body &#123;\n  background-color: black;\n&#125;</code></pre>\n\n<h2 id=\"过关目标-2\"><a href=\"#过关目标-2\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>用 CSS 把页面中<code>body</code>元素的背景色变成黑色；</li>\n<li>从而证明我们页面中拥有一个<code>body</code>元素；</li>\n</ul>\n<h2 id=\"过关条件-2\"><a href=\"#过关条件-2\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>body</code>元素必须拥有<code>background-color</code>属性，并且值为<code>black</code>；</li>\n<li>CSS 的格式必须合格并且遵循规范写法；</li>\n<li>CSS 的规则写法必须用分号结束；</li>\n</ul>\n<h2 id=\"学会了什么？-2\"><a href=\"#学会了什么？-2\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>使用背景颜色；</li>\n<li>证明了页面中必定会有一个<code>body</code>元素；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-2\"><a href=\"#答案-2\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200706173011551.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第二十六关」从主体元素中继承样式\"><a href=\"#「第二十六关」从主体元素中继承样式\" class=\"headerlink\" title=\"「第二十六关」从主体元素中继承样式\"></a>「第二十六关」从主体元素中继承样式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Inherit Styles from the Body Element</code></p></blockquote>\n<h2 id=\"知识点-3\"><a href=\"#知识点-3\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>上一关我们证明了每一个 HTML 页面中都必定会有<code>body</code>元素；</li>\n<li>而且<code>body</code>元素也是可以使用 CSS 给它定制样式的；</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>记住：</strong><code>body</code>元素与其他 HTML 中的元素一样，都是可以使用 CSS 给予样式控制的。不同的就是，<code>body</code>元素中的样式会被 HTML 中其他元素默认继承。意思就是说，任何在 body 中的样式都会携带到其他元素中，如果 body 中给予了背景颜色是黑色，那我们加入一个<code>div</code>元素，默认也是黑色背景。</p></blockquote>\n<h2 id=\"过关目标-3\"><a href=\"#过关目标-3\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>首先，创建一个<code>h1</code>元素，内容填入文字 “<strong>Hello World</strong>”；</li>\n<li>接下来我们让这个页面下所有元素的文字颜色都改为绿色，要达到这样的效果只需要在<code>body</code>元素中加入<code>color: green</code>即可；</li>\n<li>最后给<code>body</code>元素定义字体为<code>monospace</code>，我们只需要在<code>body</code>样式中加入<code>font-family: monospace</code>属性值即可；</li>\n</ul>\n<h2 id=\"过关条件-3\"><a href=\"#过关条件-3\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li>创建一个<code>h1</code>元素；</li>\n<li><code>h1</code>元素内容是 Hello World；</li>\n<li><code>h1</code>元素有关闭标签；</li>\n<li><code>body</code>元素应该有<code>color</code>属性，并且值为<code>green</code>；</li>\n<li><code>body</code>元素应该有<code>font-family</code>属性，并且值为<code>monospace</code>；</li>\n<li><code>h1</code>元素的字体应该继承<code>body</code>元素的字体定义；</li>\n<li><code>h1</code>元素的字体颜色应该继承<code>body</code>元素的字体颜色；</li>\n</ul>\n<h2 id=\"学会了什么？-3\"><a href=\"#学会了什么？-3\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>学会继承主体（body）元素的样式；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-3\"><a href=\"#答案-3\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200706174603899.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第二十七关」CSS-样式继承中样式优先级\"><a href=\"#「第二十七关」CSS-样式继承中样式优先级\" class=\"headerlink\" title=\"「第二十七关」CSS 样式继承中样式优先级\"></a>「第二十七关」CSS 样式继承中样式优先级</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Prioritize One Style Over Another</code></p></blockquote>\n<h2 id=\"知识点-4\"><a href=\"#知识点-4\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>有些时候 HTML 元素会同时存在多个样式，并且产生冲突的可能性；</li>\n<li>举例，我们的<code>h1</code>元素无法同时拥有绿色和粉红色字体颜色的属性；</li>\n<li>让我们来看看，如果我们给一个元素一个类名，并且赋予这个类红粉色的字体颜色；</li>\n<li>这个时候会不会覆盖<code>body</code>元素中的<code>color: green</code>CSS 属性；</li>\n</ul>\n<h2 id=\"过关目标-4\"><a href=\"#过关目标-4\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>创建一个 CSS 类，名为<code>pink-text</code>；</li>\n<li>然后给<code>pink-text</code>加入字体颜色<code>color: pink</code>；</li>\n<li>把<code>pink-text</code>类赋予<code>h1</code>元素；</li>\n</ul>\n<h2 id=\"过关条件-4\"><a href=\"#过关条件-4\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素必须拥有<code>pink-text</code>类；</li>\n<li><code>&lt;style&gt;</code>标签中必须含有<code>pink-text</code>类样式，并且含有改变字体颜色的属性；</li>\n<li><code>h1</code>元素的字体应该是粉红色（pink）；</li>\n</ul>\n<h2 id=\"学会了什么？-4\"><a href=\"#学会了什么？-4\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何在 CSS 样式继承中覆盖<code>body</code>元素的样式；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-4\"><a href=\"#答案-4\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200706235606934.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第二十八关」覆盖后续-CSS-中的样式\"><a href=\"#「第二十八关」覆盖后续-CSS-中的样式\" class=\"headerlink\" title=\"「第二十八关」覆盖后续 CSS 中的样式\"></a>「第二十八关」覆盖后续 CSS 中的样式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Override Styles in Subsequent CSS</code></p></blockquote>\n<h2 id=\"知识点-5\"><a href=\"#知识点-5\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>上一关我们用<code>pink-text</code>类覆盖了<code>body</code>元素的 CSS 样式；</li>\n<li>这里证明了 CSS 类会覆盖<code>body</code>元素的 CSS；</li>\n<li>所以下一个问题就是，我们是否可以覆盖<code>pink-text</code>类的样式呢？</li>\n<li>一个 HTML 元素是可以叠加多个 CSS 类的，给一个元素多个 CSS 类只需要在多个类名之间加入空格即可；</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&lt;div class&#x3D;&quot;class1 class2&quot;&gt;&lt;&#x2F;div&gt;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>注意</strong>：元素中多个 CSS 类的摆放顺序是不会影响 CSS 样式的权重的。真正决定 CSS 样式的权重的是在 CSS 样式表中的顺序，CSS 样式表的样式规则会从上往下写，越是在后面的权重越高。因为<code>.blue-text</code>的样式在<code>.pink-text</code>的后面，所以最后<code>.blue-text</code>的样式会覆盖<code>.pink-text</code>。</p></blockquote>\n<h2 id=\"过关目标-5\"><a href=\"#过关目标-5\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>创建一个新的 CSS 类名为<code>blue-text</code>，然后赋予这个类蓝色字体样式；</li>\n<li><code>blue-text</code>类在样式表中必须放在<code>pink-text</code>之后；</li>\n<li>在拥有<code>pink-text</code>类的<code>h1</code>元素上叠加<code>blue-text</code>类；</li>\n</ul>\n<h2 id=\"过关条件-5\"><a href=\"#过关条件-5\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素中需要有<code>pink-text</code>类；</li>\n<li><code>h1</code>元素中需要有<code>blue-text</code>类；</li>\n<li><code>blue-text</code>和<code>pink-text</code>都需要赋予给<code>h1</code>元素；</li>\n<li><code>h1</code>元素中的字体应该是蓝色的；</li>\n</ul>\n<h2 id=\"学会了什么？-5\"><a href=\"#学会了什么？-5\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何覆盖 CSS 样式，和使用 CSS 权重；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-5\"><a href=\"#答案-5\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200707130528922.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第二十九关」通过使用-ID-属性覆盖类属性样式\"><a href=\"#「第二十九关」通过使用-ID-属性覆盖类属性样式\" class=\"headerlink\" title=\"「第二十九关」通过使用 ID 属性覆盖类属性样式\"></a>「第二十九关」通过使用 ID 属性覆盖类属性样式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Override Class Declarations by Styling ID Attributes</code></p></blockquote>\n<h2 id=\"知识点-6\"><a href=\"#知识点-6\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>上一关我们知道了 CSS 样式表是从上到下阅读的，越是后面的权重就越高，就会覆盖前面声明的样式属性；</li>\n<li>所以就算我们在<code>h1</code>元素中，把<code>pink-text</code>放在<code>blue-text</code>的前面，<code>blue-text</code>类中的 CSS 属性权重也是更大，会覆盖<code>pink-text</code>的 CSS 属性；</li>\n<li>但是 CSS 属性权重并不止于此，还有比这个权重更高的；</li>\n<li>这一关我们给<code>h1</code>元素添加一个<code>ID</code>名为<code>orange-text</code>，然后在 CSS 样式表中给这个 ID 橙色字体颜色的样式，从而覆盖掉<code>blue-text</code>类和<code>pink-text</code>类的样式；</li>\n</ul>\n<p>给一个元素加入 ID 属性需要使用以下写法：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;h1 id&#x3D;&quot;orange-text&quot;&gt;&lt;&#x2F;h1&gt;</code></pre>\n\n<p>在 CSS 样式表中定义 ID 属性需要使用以下写法：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">#brown-text &#123;\n  color: brown;\n&#125;</code></pre>\n\n<h2 id=\"过关目标-6\"><a href=\"#过关目标-6\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>给<code>h1</code>元素一个 ID 属性，值为<code>orange-text</code>；</li>\n<li>保留<code>blue-text</code>类和<code>pink-text</code>类在<code>h1</code>元素中；</li>\n<li>创建<code>orange-text</code>的 CSS 声明，并且给予<code>color: orange</code>的属性；</li>\n</ul>\n<h2 id=\"过关条件-6\"><a href=\"#过关条件-6\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素需要有一个<code>pink-text</code>类；</li>\n<li><code>h1</code>元素需要有一个<code>blue-text</code>类；</li>\n<li><code>h1</code>元素需要有一个<code>orange-text</code>ID；</li>\n<li>必须只有一个<code>h1</code>元素；</li>\n<li><code>orange-text</code>ID 需要声明好 CSS 的属性；</li>\n<li><code>h1</code>元素不应该有任何<code>style</code>属性；</li>\n<li><code>h1</code>元素中的字体应该是橙色的；</li>\n</ul>\n<h2 id=\"学会了什么？-6\"><a href=\"#学会了什么？-6\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>使用 ID 属性的样式来覆盖类样式；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-6\"><a href=\"#答案-6\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200707195618978.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十关」使用行内样式覆盖类样式\"><a href=\"#「第三十关」使用行内样式覆盖类样式\" class=\"headerlink\" title=\"「第三十关」使用行内样式覆盖类样式\"></a>「第三十关」使用行内样式覆盖类样式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Override Class Declarations with Inline Styles</code></p></blockquote>\n<h2 id=\"知识点-7\"><a href=\"#知识点-7\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>上一关我们见证了 ID 属性的样式声明在权重中是高于类属性的样式声明；</li>\n<li>就算在 CSS 样式表中是写在最上面的，也会比其他类属性声明的 CSS 属性要大；</li>\n<li>但是还有一个大佬是被所有这些都权重更高的，还记得行内样式吗？就是在元素中定义的<code>style</code>属性；</li>\n</ul>\n<p>不记得行内样式的写法的同学，可以看看以下例子：</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;h1 style&#x3D;&quot;color: green&quot;&gt;&lt;&#x2F;h1&gt;</code></pre>\n\n<h2 id=\"过关目标-7\"><a href=\"#过关目标-7\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>使用行内样式，让<code>h1</code>元素中的字体变成白色（<code>color: white</code>）；</li>\n<li>保留<code>h1</code>元素中的<code>blue-text</code>类，<code>pink-text</code>类和<code>orange-text</code>ID 属性；</li>\n</ul>\n<h2 id=\"过关条件-7\"><a href=\"#过关条件-7\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素需要有一个<code>pink-text</code>类；</li>\n<li><code>h1</code>元素需要有一个<code>blue-text</code>类；</li>\n<li><code>h1</code>元素需要有一个<code>orange-text</code>ID；</li>\n<li><code>h1</code>元素需要有一个<code>style</code>属性；</li>\n<li><code>h1</code>元素中的字体是白色的；</li>\n</ul>\n<h2 id=\"学会了什么？-7\"><a href=\"#学会了什么？-7\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>使用行内样式覆盖元素的样式；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-7\"><a href=\"#答案-7\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200707201825875.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十一关」用-Important-覆盖所有样式\"><a href=\"#「第三十一关」用-Important-覆盖所有样式\" class=\"headerlink\" title=\"「第三十一关」用 Important 覆盖所有样式\"></a>「第三十一关」用 Important 覆盖所有样式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Override All Other Styles by using Important</code></p></blockquote>\n<h2 id=\"知识点-8\"><a href=\"#知识点-8\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>在上一个关卡中发现，行内样式是会覆盖所有类型的样式声明；</li>\n<li>但是行内样式并不是最大的，还有最后一个比行内样式权重还要高的；</li>\n<li>对那就是使用<code>!important</code>，顾名思义就是“重要”的意识，也是表达着这个样式有最高优先级；</li>\n<li>在我们使用它之前，先来了解一下为什么我们需要强制覆盖 CSS 样式；</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>为何要强制覆盖 CSS 样式？又有什么时候需要我们这么做呢？</strong></p>\n<p>在很多情况下，我们需要使用到 CSS 库，甚至是某 UI 框架。因为是使用别的开发者写好的样式，自然就有可能我们些的样式是被原有库或则框架的样式所覆盖了。所以当我们需要保证我们编写的 CSS 拥有最高优先级，并且绝对有效，这个时候我们就可以使用 <code>!important</code>。</p></blockquote>\n<ul>\n<li>让我们回到最初的<code>pink-text</code>类样式声明，一开始我们使用了写在后面的<code>blue-text</code>类覆盖了它的样式；</li>\n<li>接下来是使用了<code>orange-text</code>ID 属性覆盖它；</li>\n<li>最后使用了行内样式覆盖；</li>\n</ul>\n<p><strong>所以样式声明的优先级顺序就是：</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>CSS 类声明顺序</strong> &lt; <strong>ID 属性样式</strong> &lt; <strong>行内样式</strong></p></blockquote>\n<h2 id=\"过关目标-8\"><a href=\"#过关目标-8\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>让我们在<code>pink-text</code>类的颜色声明后面加入<code>!important</code>；</li>\n<li>用这个给<code>pink-text</code>类的样式声明得到最大优先级；</li>\n</ul>\n<p>!important 的使用例子：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">.brown-text &#123;\n  color: brown !important;\n&#125;</code></pre>\n\n<h2 id=\"过关条件-8\"><a href=\"#过关条件-8\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素需要有一个<code>pink-text</code>类；</li>\n<li><code>h1</code>元素需要有一个<code>blue-text</code>类；</li>\n<li><code>h1</code>元素需要有一个<code>orange-text</code>ID；</li>\n<li><code>h1</code>元素中应该有行内属性为<code>color: white</code>；</li>\n<li><code>pink-text</code>类样式声明中应该有 <code>!important</code>结尾；</li>\n<li><code>h1</code>元素中的字体应该是粉红色；</li>\n</ul>\n<h2 id=\"学会了什么？-8\"><a href=\"#学会了什么？-8\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何使用最高优先级的<code>!important</code>；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-8\"><a href=\"#答案-8\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200707223115633.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十二关」使用-Hex-代码指定特定颜色\"><a href=\"#「第三十二关」使用-Hex-代码指定特定颜色\" class=\"headerlink\" title=\"「第三十二关」使用 Hex 代码指定特定颜色\"></a>「第三十二关」使用 Hex 代码指定特定颜色</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use Hex Code for Specific Colors</code></p></blockquote>\n<h2 id=\"知识点-9\"><a href=\"#知识点-9\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>你们知道在 CSS 中还有其他方式可以用来指定颜色的吗？</li>\n<li>其中一种方式就是使用 十六进制（Hexadecimal）或者叫 Hex 颜色代码；</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>什么是十六进制？</strong></p>\n<p>学过计算机的同学应该都知道，通常用小数，或者以 10 为底的数，那就是用数字 0 到 9。十六进制，顾名思义就是用 16 为底的数。也就是说需要使用 16 个不同的符号。符号 0 到 9 用来代表数字中的零到久，然后 A，B，C，D，E，F 就是第十到十五的符号。从 0 到 9，A 到 F 一共就有 16 个符号组成十六进制的代码。</p></blockquote>\n<ul>\n<li>在 CSS 中，我们可以使用 6 个十六进制的数值来代表颜色；</li>\n<li>每两个都是代表着<code>红（R）</code>，<code>绿（G）</code>，<code>蓝（B）</code>三种色系。</li>\n<li>拿<code>#000000</code>的黑色作为例子，如果红，绿，蓝都调到最低，自然就是没有颜色，那就是黑色了；</li>\n<li>可以把这三种颜色当成三个颜色的灯泡，然后十六进制是用来控制他们的亮度，数值越高就越亮，0 为最低，也就是灯会关掉，所以所有<code>#000000</code>就等同于三盏灯都关掉，自然是黑色了。如果三盏灯都调到最亮，那就会是白色了，也就是我们用的<code>#FFFFFF</code>；</li>\n</ul>\n<p>颜色码使用例子如下：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">body &#123;\n  color: #000000;\n&#125;</code></pre>\n\n<h2 id=\"过关目标-9\"><a href=\"#过关目标-9\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>替换<code>body</code>元素中的<code>black</code>属性值为<code>#000000</code>；</li>\n</ul>\n<h2 id=\"过关条件-9\"><a href=\"#过关条件-9\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>body</code>元素的背景颜色应该是黑色；</li>\n<li>需要替换<code>black</code>，并且使用 Hex 颜色码；</li>\n</ul>\n<h2 id=\"学会了什么？-9\"><a href=\"#学会了什么？-9\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>什么是 Hex 颜色码；</li>\n<li>什么是十六进制；</li>\n<li>如何使用 Hex 颜色码；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-9\"><a href=\"#答案-9\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200709203341902.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十三关」使用十六进制代码来混合颜色\"><a href=\"#「第三十三关」使用十六进制代码来混合颜色\" class=\"headerlink\" title=\"「第三十三关」使用十六进制代码来混合颜色\"></a>「第三十三关」使用十六进制代码来混合颜色</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use Hex Code to Mix Colors</code></p></blockquote>\n<h2 id=\"知识点-10\"><a href=\"#知识点-10\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>我们来回顾一下上一关的知识，Hex 颜色代码中有 6 位十六进制的数值，每两位都是分别代表着<code>红（R）</code>，<code>绿（G）</code>，<code>蓝（B）</code>三种色系；</li>\n<li>我们可以随意调配这三种纯颜色的亮度来混合出超过 1600 万种颜色；</li>\n<li>比如说橙色，就是纯红色，加一点绿色，然后没有蓝色，对应 Hex 颜色码就是<code>#FFA500</code>；</li>\n<li>数值<code>0</code>在 Hex 码中是最低的数值，等同于把这个颜色调到没有为止；</li>\n<li>数值<code>F</code>就是 Hex 码中最大值，等同于把这个颜色调到最亮值；</li>\n</ul>\n<h2 id=\"过关目标-10\"><a href=\"#过关目标-10\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>转换一下颜色成 Hex 颜色码：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>颜色</th>\n<th>Hex 码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Dodger Blue</td>\n<td>#1E90FF</td>\n</tr>\n<tr>\n<td>Green</td>\n<td>#00FF00</td>\n</tr>\n<tr>\n<td>Orange</td>\n<td>#FFA500</td>\n</tr>\n<tr>\n<td>Red</td>\n<td>#FF0000</td>\n</tr>\n</tbody></table>\n<h2 id=\"过关条件-10\"><a href=\"#过关条件-10\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素的字体<code>I am red!</code>需要是红色；</li>\n<li>红色（Red）字体颜色属性应该使用<code>hex 码</code>替换颜色值<code>red</code>;</li>\n<li><code>h1</code>元素的字体<code>I am green!</code>需要是绿色；</li>\n<li>绿色（Green）字体颜色属性应该使用<code>hex 码</code>替换颜色值<code>green</code>;</li>\n<li><code>h1</code>元素的字体<code>I am dodger blue!</code>需要是宝蓝色；</li>\n<li>宝蓝色（Dodger Blue）字体颜色属性应该使用<code>hex 码</code>替换颜色值<code>dodgerblue</code>;</li>\n<li><code>h1</code>元素的字体<code>I am orange!</code>需要是橙色；</li>\n<li>橙色（Orange）字体颜色属性应该使用<code>hex 码</code>替换颜色值<code>orange</code>;</li>\n</ul>\n<h2 id=\"学会了什么？-10\"><a href=\"#学会了什么？-10\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>使用 Hex 颜色码替换颜色名词的属性值；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-10\"><a href=\"#答案-10\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200709211924778.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十四关」使用-Hex-颜色码缩写\"><a href=\"#「第三十四关」使用-Hex-颜色码缩写\" class=\"headerlink\" title=\"「第三十四关」使用 Hex 颜色码缩写\"></a>「第三十四关」使用 Hex 颜色码缩写</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use Abbreviated Hex Code</code></p></blockquote>\n<h2 id=\"知识点-11\"><a href=\"#知识点-11\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>超过 1600 万种颜色码的可能性，让许多人感到不知所措；</li>\n<li>而且很难记住十六进制代码，幸运的是你可以用他们的缩写版；</li>\n<li>比如红色的 Hex 颜色码为 <code>#FF0000</code> 可以被缩写为 <code>#F00</code>，这个缩写版只给红色一个数值，绿色一个数值和蓝色一个数值；</li>\n<li>但是这样的缩写版，就会让我们的颜色总可能数讲到 4000 种；</li>\n<li>就算使用这种缩写版，浏览器会设别 <code>#F00</code> 和 <code>#FF0000</code> 为同一个颜色；</li>\n</ul>\n<h2 id=\"过关目标-11\"><a href=\"#过关目标-11\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>用以下缩写版的 Hex 颜色码来更换对应的 CSS 类中的颜色值：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>颜色</th>\n<th>缩写 Hex 码</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Cyan</td>\n<td>#0FF</td>\n</tr>\n<tr>\n<td>Green</td>\n<td>#0F0</td>\n</tr>\n<tr>\n<td>Red</td>\n<td>#F00</td>\n</tr>\n<tr>\n<td>Fuchsia</td>\n<td>#F0F</td>\n</tr>\n</tbody></table>\n<h2 id=\"过关条件-11\"><a href=\"#过关条件-11\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素的字体<code>I am red!</code>需要是红色；</li>\n<li>红色（Red）字体颜色属性应该使用缩写<code>hex 码</code>替换颜色值<code>#FF0000</code>;</li>\n<li><code>h1</code>元素的字体<code>I am green!</code>需要是绿色；</li>\n<li>绿色（Green）字体颜色属性应该使用缩写<code>hex 码</code>替换颜色值<code>#00FF00</code>;</li>\n<li><code>h1</code>元素的字体<code>I am cyan!</code>需要是宝青色；</li>\n<li>青色（Cyan）字体颜色属性应该使用缩写<code>hex 码</code>替换颜色值<code>#00FFFF</code>;</li>\n<li><code>h1</code>元素的字体<code>I am fuchsia!</code>需要是樱红色；</li>\n<li>樱红色（Fuchsia）字体颜色属性应该使用缩写<code>hex 码</code>替换颜色值<code>#FF00FF</code>;</li>\n</ul>\n<h2 id=\"学会了什么？-11\"><a href=\"#学会了什么？-11\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>使用缩写版的 Hex 颜色码；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-11\"><a href=\"#答案-11\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/2020071010464869.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十五关」使用-RGB-值改变元素颜色\"><a href=\"#「第三十五关」使用-RGB-值改变元素颜色\" class=\"headerlink\" title=\"「第三十五关」使用 RGB 值改变元素颜色\"></a>「第三十五关」使用 RGB 值改变元素颜色</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use RGB values to Color Elements</code></p></blockquote>\n<h2 id=\"知识点-12\"><a href=\"#知识点-12\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>除了 Hex 颜色码，还有其他方法可以用来给元素赋予颜色，那就是使用<code>RGB</code>值；</li>\n<li>黑色的 RGB 值是：<code>rgb(0, 0, 0)</code>；</li>\n<li>白色的 RGB 值是：<code>rgb(255, 255, 255)</code>；</li>\n<li>与十六进制一样的原理，都是使用调整<code>红（R）</code>，<code>绿（G）</code>，<code>蓝（B）</code>三种色系的亮度来混合出 1600 万种颜色；</li>\n<li>十六进制使用的是 0-9 和 A-F，而<code>RGB</code>使用的是 0 到 255，如果我们计算一下，其实 16 x 16 就是 256，而计算机都是从 0 开始，所以 $256-1&#x3D;255$ ；</li>\n<li>所以<code>RGB</code>和十六进制都是拥有一样的颜色种数，并且都是调整三种色系来变换颜色的；</li>\n</ul>\n<p>以下是把背景颜色换成橙色的 CSS 代码：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">body &#123;\n  background-color: rgb(255, 165, 0);\n&#125;</code></pre>\n\n<h2 id=\"过关目标-12\"><a href=\"#过关目标-12\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>把<code>body</code>元素的背景颜色换成<code>RGB</code>中的黑色值：<code>rgb(0, 0, 0)</code>；</li>\n</ul>\n<h2 id=\"过关条件-12\"><a href=\"#过关条件-12\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h1</code>元素的字体<code>I am red!</code>需要是红色；</li>\n<li>红色（Red）字体颜色属性应该使用<code>RGB</code>值替换 Hex 颜色值;</li>\n<li><code>h1</code>元素的字体<code>I am orchid!</code>需要是淡紫色；</li>\n<li>淡紫色（Orchid）字体颜色属性应该使用<code>RGB</code>值替换 Hex 颜色值;</li>\n<li><code>h1</code>元素的字体<code>I am blue!</code>需要是蓝色；</li>\n<li>蓝色（Blue）字体颜色属性应该使用<code>RGB</code>替换 Hex 颜色值;</li>\n<li><code>h1</code>元素的字体<code>I am sienna!</code>需要是赭色；</li>\n<li>赭色（Sienna）字体颜色属性应该使用<code>RGB</code>替换 Hex 颜色值;</li>\n</ul>\n<h2 id=\"学会了什么？-12\"><a href=\"#学会了什么？-12\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>使用 RGB 值改变元素颜色；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-12\"><a href=\"#答案-12\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200710124638981.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十六关」用-RGB-来混合颜色\"><a href=\"#「第三十六关」用-RGB-来混合颜色\" class=\"headerlink\" title=\"「第三十六关」用 RGB 来混合颜色\"></a>「第三十六关」用 RGB 来混合颜色</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Change the Color of Text</code></p></blockquote>\n<h2 id=\"知识点-13\"><a href=\"#知识点-13\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>与 Hex 颜色代码一样，我们可以用不同的<code>RGB</code>值来混合出各种颜色；</li>\n</ul>\n<h2 id=\"过关目标-13\"><a href=\"#过关目标-13\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>使用以下<code>RGB</code>值来替换 CSS 中的 Hex 颜色代码：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>颜色</th>\n<th>RGB 值</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>Blue</td>\n<td>rgba(0, 0, 255)</td>\n</tr>\n<tr>\n<td>Red</td>\n<td>rgb(255, 0 , 0)</td>\n</tr>\n<tr>\n<td>Orchid</td>\n<td>rgb(218, 112, 214)</td>\n</tr>\n<tr>\n<td>Sienna</td>\n<td>rgb(160, 82, 45)</td>\n</tr>\n</tbody></table>\n<h2 id=\"过关条件-13\"><a href=\"#过关条件-13\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>h2</code>元素中需要有<code>style</code>属性；</li>\n<li><code>h2</code>元素的<code>color</code>样式属性应该赋予<code>red</code>这个值；</li>\n<li><code>style</code>属性值里的样式属性应该以<code>;</code>符号结束；</li>\n</ul>\n<h2 id=\"学会了什么？-13\"><a href=\"#学会了什么？-13\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何使用<code>RGB</code>混合颜色;</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-13\"><a href=\"#答案-13\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200710160701552.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十七关」使用-CSS-变量同时改变多个元素样式\"><a href=\"#「第三十七关」使用-CSS-变量同时改变多个元素样式\" class=\"headerlink\" title=\"「第三十七关」使用 CSS 变量同时改变多个元素样式\"></a>「第三十七关」使用 CSS 变量同时改变多个元素样式</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use CSS Variables to change several elements at once</code></p></blockquote>\n<h2 id=\"知识点-14\"><a href=\"#知识点-14\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>CSS 变量是一种通过只改变一个值来一次性改变多个 CSS 样式属性的强大方法；</li>\n<li>遵循下面的目标，看看仅改变三个值来改变多个元素的样式；</li>\n</ul>\n<h2 id=\"过关目标-14\"><a href=\"#过关目标-14\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>在<code>penguin</code>类中，改变一下内容：<ol>\n<li>改变<code>--penguin-skin</code>的<code>black</code>为<code>gray</code>；</li>\n<li>改变<code>--penguin-belly</code>的<code>gray</code>为<code>white</code>；</li>\n<li>改变<code>--penguin-beak</code>的<code>yellow</code>为<code>orange</code>；</li>\n</ol>\n</li>\n<li>必须在<code>/* Only change code below this line */</code> 和 <code>/* Only change code above this line */</code> 这两个备注之间修改代码；</li>\n</ul>\n<h2 id=\"过关条件-14\"><a href=\"#过关条件-14\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>penguin</code>类中的<code>--penguin-skin</code>CSS 变量的值改为<code>gray</code>；</li>\n<li><code>penguin</code>类中的<code>--penguin-belly</code>CSS 变量的值改为<code>white</code>；</li>\n<li><code>penguin</code>类中的<code>--penguin-beak</code>CSS 变量的值改为<code>orange</code>；</li>\n</ul>\n<h2 id=\"学会了什么？-14\"><a href=\"#学会了什么？-14\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何使用 CSS 变量批量改变多个元素样式；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-14\"><a href=\"#答案-14\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200710163203200.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十八关」创建自定义-CSS-变量\"><a href=\"#「第三十八关」创建自定义-CSS-变量\" class=\"headerlink\" title=\"「第三十八关」创建自定义 CSS 变量\"></a>「第三十八关」创建自定义 CSS 变量</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Create a custom CSS Variable</code></p></blockquote>\n<h2 id=\"知识点-15\"><a href=\"#知识点-15\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>创建一个 CSS 变量，我们只需要在变量名前面加上两个“横杠（<code>-</code>）”即可；</li>\n<li>编写语法如下：</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">--penguin-skin： gray;</code></pre>\n\n<ul>\n<li>以上代码会创建一个变量，名为<code>--penguin-skin</code>，并且赋予了这个变量的值为<code>gray</code>；</li>\n<li>现在我们就可以在 CSS 样式表中任何的地方使用这个变量；</li>\n</ul>\n<h2 id=\"过关目标-15\"><a href=\"#过关目标-15\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>在<code>penguin</code>类中，创建一个变量名<code>--penguin-skin</code>；</li>\n<li>并且给予这个变量一个值为<code>gray</code>；</li>\n<li>必须在<code>/* Only change code below this line */</code> 和 <code>/* Only change code above this line */</code> 这两个备注之间编写代码；</li>\n</ul>\n<h2 id=\"过关条件-15\"><a href=\"#过关条件-15\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>penguin</code>类中需要含有一个<code>--penguin-skin</code>变量，并且变量值为<code>gray</code>；</li>\n</ul>\n<h2 id=\"学会了什么？-15\"><a href=\"#学会了什么？-15\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何编写 CSS 变量；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-15\"><a href=\"#答案-15\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200710164128315.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第三十九关」使用自定义-CSS-变量\"><a href=\"#「第三十九关」使用自定义-CSS-变量\" class=\"headerlink\" title=\"「第三十九关」使用自定义 CSS 变量\"></a>「第三十九关」使用自定义 CSS 变量</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use a custom CSS Variable</code></p></blockquote>\n<h2 id=\"知识点-16\"><a href=\"#知识点-16\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>上一关我们创建了一个自定义的 CSS 变量，这一关我们来看看是怎么使用的；</li>\n<li>创建了一个 CSS 变量后，这个变量的名字可以在 CSS 样式属性中使用，只要我们关联这个变量名即可；</li>\n<li>在代码中的关联写法如下：</li>\n</ul>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">background： var(--penguin-skin);</code></pre>\n\n<ul>\n<li>以上代码改变了<code>background</code>属性的值，这个值我们用了 CSS 变量；</li>\n<li>CSS 的变量的值，就是我们上一关定义的<code>gray</code>，这个值会被关联过来；</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>注意</strong>：使用的变量名字必须是和定义的变量名<strong>完全一致</strong>，要不就不会生效！</p></blockquote>\n<h2 id=\"过关目标-16\"><a href=\"#过关目标-16\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>把一下几个 CSS 类中的<code>background</code>属性的值都替换成<code>--penguin-skin</code>CSS 变量：<ol>\n<li>penguin-top;</li>\n<li>penguin-bottom;</li>\n<li>right-hand;</li>\n<li>left-hand;</li>\n</ol>\n</li>\n</ul>\n<h2 id=\"过关条件-16\"><a href=\"#过关条件-16\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>penguin-top</code>CSS 类中的<code>background</code>属性值需要改为使用<code>--penguin-skin</code>CSS 变量；</li>\n<li><code>penguin-bottom</code>CSS 类中的<code>background</code>属性值需要改为使用<code>--penguin-skin</code>CSS 变量；</li>\n<li><code>right-hand</code>CSS 类中的<code>background</code>属性值需要改为使用<code>--penguin-skin</code>CSS 变量；</li>\n<li><code>left-hand</code>CSS 类中的<code>background</code>属性值需要改为使用<code>--penguin-skin</code>CSS 变量；</li>\n</ul>\n<h2 id=\"学会了什么？-16\"><a href=\"#学会了什么？-16\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何使用自定义 CSS 变量；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-16\"><a href=\"#答案-16\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200710165358878.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第四十关」给-CSS-变量加上回退值\"><a href=\"#「第四十关」给-CSS-变量加上回退值\" class=\"headerlink\" title=\"「第四十关」给 CSS 变量加上回退值\"></a>「第四十关」给 CSS 变量加上回退值</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Attach a Fallback value to a CSS Variable</code></p></blockquote>\n<h2 id=\"知识点-17\"><a href=\"#知识点-17\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>当我们使用 CSS 变量做为属性的值，我们可以赋予这个变量一个回退值；</li>\n<li>所谓的回退值，就是当这个变量无效或者无法取得值是，就会使用回退的值；</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>注意</strong>：这个回退值并不是用来提高浏览器兼容的，在 IE 浏览器下回退值也不会生效的。所以这个回退值只是用于当变量无法获取到值时，浏览器有一个可回退的值可用，并且可以保证有效显示。</p></blockquote>\n<p>如下是如何设置回退值的例子：</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">background: var(--penguin-skin, black);</code></pre>\n\n<ul>\n<li>上面的例子中，如果<code>--penguin-skin</code>变量无法获取到值，就会自动回退使用<code>black</code>做为背景颜色属性的值；</li>\n</ul>\n<h2 id=\"过关目标-17\"><a href=\"#过关目标-17\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>同学们应该都注意到，右边的企鹅的身体部分的颜色不见了；</li>\n<li>这个是因为<code>.penguin-top</code>类和<code>.penguin-bottom</code>类中的背景颜色属性的值中的变量名拼写错误了，所以导致变量无法取到变量所定义的值；</li>\n<li>在不修正这个变量名拼写错误的情况下，我们给<code>.penguin-top</code>类和<code>.penguin-bottom</code>类中的<code>background</code>属性的变量值加上回退颜色：<code>black</code>；</li>\n</ul>\n<h2 id=\"过关条件-17\"><a href=\"#过关条件-17\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li>在<code>penguin-top</code>类中的<code>background</code>属性的变量值加入回退值<code>black</code>；</li>\n<li>在<code>penguin-bottom</code>类中的<code>background</code>属性的变量值加入回退值<code>black</code>；</li>\n</ul>\n<h2 id=\"学会了什么？-17\"><a href=\"#学会了什么？-17\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何给 CSS 变量加上可回退的值；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-17\"><a href=\"#答案-17\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200710192259591.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第四十一关」CSS-变量的浏览器兼容\"><a href=\"#「第四十一关」CSS-变量的浏览器兼容\" class=\"headerlink\" title=\"「第四十一关」CSS 变量的浏览器兼容\"></a>「第四十一关」CSS 变量的浏览器兼容</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Improve Compatibility with Browser Fallbacks</code></p></blockquote>\n<h2 id=\"知识点-18\"><a href=\"#知识点-18\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>当我们使用 CSS 时，很有可能我们会遇到浏览器兼容问题；</li>\n<li>如果遇到需要兼容不支持 CSS 变量的浏览器时，我们要提供一个回退的属性给浏览器读取；</li>\n<li>当浏览器解析页面上的 CSS 时，它会忽略无法识别的 CSS 属性；</li>\n<li>比如此时我们有一个背景颜色属性值使用了 CSS 变量，Internet Explore（简称 IE）会忽略这个 IE 不支持的背景颜色，因为 IE 不支持使用 CSS 变量。这种情况下 IE 浏览器只会寻找其他它认识的背景属性，如果它找不到就会回退到浏览器默认的背景颜色，当然这样不是我们想要的，并且可能默认的颜色和我们理想的效果有很大的出入；</li>\n<li>按照以上的逻辑，如果我们需要给某一个属性一个兼容的回退值，我们只需要在不兼容的属性上面添加一个可兼容的属性即可；</li>\n<li>这样当浏览器遇到一个属性它无法识别，就会往上找可用的属性，这样就可以做到浏览器兼容了；</li>\n</ul>\n<h2 id=\"过关目标-18\"><a href=\"#过关目标-18\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>在代码中我们可以看到，在<code>.red-box</code>类样式中的<code>background</code>属性值使用了<code>--red-color</code>CSS 变量；</li>\n<li>我们在这个属性的上方加入<code>background: red</code>，从而兼容其他不支持 CSS 变量的浏览器；</li>\n</ul>\n<h2 id=\"过关条件-18\"><a href=\"#过关条件-18\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>.red-box</code>类中的<code>background</code>属性上面添加一个<code>background: red</code>的兼容属性；</li>\n</ul>\n<h2 id=\"学会了什么？-18\"><a href=\"#学会了什么？-18\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如果做到浏览器兼容；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-18\"><a href=\"#答案-18\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200711101311833.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第四十二关」继承-CSS-变量\"><a href=\"#「第四十二关」继承-CSS-变量\" class=\"headerlink\" title=\"「第四十二关」继承 CSS 变量\"></a>「第四十二关」继承 CSS 变量</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Inherit CSS Variables</code></p></blockquote>\n<h2 id=\"知识点-19\"><a href=\"#知识点-19\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>当我们创建一个 CSS 变量，我们是可以在创建的 CSS 选择器中使用；</li>\n<li>如果我现在把<code>--penguin-skin</code>变量下载<code>.penguin</code>类选择器中，那就能<code>.penguin</code>中可以调用这个 CSS 变量；</li>\n<li>同时也可以在<code>.penguin</code>的所有子节点中使用，除外都是无法调用的；</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>那些才是子节点呢？</strong></p>\n<p>比如现在我们有一段这样的 HTML：<br><code>&lt;div class=&quot;foo&quot;&gt;&lt;span class=&quot;bar&quot;/&gt;&lt;/div&gt;</code></p>\n<p>这段 HTML 中<code>bar</code>就是<code>foo</code>的子节点，他们彼此有继承关系。</p></blockquote>\n<ul>\n<li>为了可以良好利用继承关系，CSS 变量一般都会放入<code>:root</code>元素；</li>\n<li><code>:root</code>是一个伪类（pseudo-class）选择器，它会直接匹配 HTML 文档（document）中的根元素，那就是<code>html</code>元素；</li>\n<li>在<code>:root</code>伪类中添加我们的 CSS 变量，遵循继承关系这些变量全局都可以使用了；</li>\n</ul>\n<h2 id=\"过关目标-19\"><a href=\"#过关目标-19\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>在<code>:root</code>伪类选择器中声明一个<code>--penguin-belly</code>变量，并且给予<code>pink</code>属性值；</li>\n<li>然后我们就可以看到所有使用到这个变量的地方，都会可以继承并且生效；</li>\n</ul>\n<h2 id=\"过关条件-19\"><a href=\"#过关条件-19\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>--penguin-belly</code>变量需要在<code>:root</code>伪类选择器中声明，并且属性值是<code>pink</code>；</li>\n</ul>\n<h2 id=\"学会了什么？-19\"><a href=\"#学会了什么？-19\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何使用 CSS 继承关系来使用 CSS 变量；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-19\"><a href=\"#答案-19\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200711133923383.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第四十三关」在特定地方改变-CSS-变量\"><a href=\"#「第四十三关」在特定地方改变-CSS-变量\" class=\"headerlink\" title=\"「第四十三关」在特定地方改变 CSS 变量\"></a>「第四十三关」在特定地方改变 CSS 变量</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Change a variable for a specific area</code></p></blockquote>\n<h2 id=\"知识点-20\"><a href=\"#知识点-20\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>当我们在<code>:root</code>伪类选择器中定义 CSS 变量，整个页面使用到这个变量的地方都会被影响；</li>\n<li>但是如果我们想再某一元素中重新定义这个变量，我们只需要在这个选择器中重新定义即可；</li>\n</ul>\n<h2 id=\"过关目标-20\"><a href=\"#过关目标-20\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>在<code>penguin</code>类中改变<code>--penguin-belly</code>属性值为<code>white</code>；</li>\n</ul>\n<h2 id=\"过关条件-20\"><a href=\"#过关条件-20\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>penguin</code>类中加入<code>--penguin-belly</code>属性，并且值赋予<code>white</code>；</li>\n</ul>\n<h2 id=\"学会了什么？-20\"><a href=\"#学会了什么？-20\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>如何在特定地方改变 CSS 变量值；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-20\"><a href=\"#答案-20\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200711144035565.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「第四十四关」使用媒体查询来修改变量值\"><a href=\"#「第四十四关」使用媒体查询来修改变量值\" class=\"headerlink\" title=\"「第四十四关」使用媒体查询来修改变量值\"></a>「第四十四关」使用媒体查询来修改变量值</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>关卡名：<code>Use a media query to change a variable</code></p></blockquote>\n<h2 id=\"知识点-21\"><a href=\"#知识点-21\" class=\"headerlink\" title=\"知识点\"></a>知识点</h2><ul>\n<li>CSS 变量可以简化媒体查询的使用方式；</li>\n<li>比如当我们屏幕小于或大于媒体查询的范围时，我们可以改变 CSS 变量的值；</li>\n<li>这时候所有使用了这个变量的属性就会跟着改变；</li>\n</ul>\n<h2 id=\"过关目标-21\"><a href=\"#过关目标-21\" class=\"headerlink\" title=\"过关目标\"></a>过关目标</h2><ul>\n<li>在<code>:root</code>选择器中的<code>media query</code>内，重新定义<code>--penguin-size</code>的值为<code>200px</code>；</li>\n<li>同时也重新定义<code>--penguin-skin</code>变量的值为<code>black</code>;</li>\n<li>最后改变预览区域的宽度，看看又什么变化；</li>\n</ul>\n<h2 id=\"过关条件-21\"><a href=\"#过关条件-21\" class=\"headerlink\" title=\"过关条件\"></a>过关条件</h2><ul>\n<li><code>:root</code>中需要重新定义<code>--penguin-size</code>的值为<code>200px</code>；</li>\n<li><code>:root</code>中需要重新定义<code>--penguin-skin</code>的值为<code>black</code>；</li>\n</ul>\n<h2 id=\"学会了什么？-21\"><a href=\"#学会了什么？-21\" class=\"headerlink\" title=\"学会了什么？\"></a>学会了什么？</h2><p>这关卡主要教会我们：</p>\n<ol>\n<li>在媒体查询中使用 CSS 变量重定义，从而达到在特定屏幕大小时，变量值发生变化；</li>\n</ol>\n<p><img src=\"https://img-blog.csdnimg.cn/20200504230328260.png\"></p>\n<h2 id=\"答案-21\"><a href=\"#答案-21\" class=\"headerlink\" title=\"答案\"></a>答案</h2><p><img src=\"https://img-blog.csdnimg.cn/20200711145852830.png\"></p>\n<p><img src=\"https://img-blog.csdnimg.cn/2020050422480843.png\"></p>\n<h1 id=\"「总结」\"><a href=\"#「总结」\" class=\"headerlink\" title=\"「总结」\"></a>「总结」</h1><p><img src=\"https://img-blog.csdnimg.cn/20200711150059950.png\"></p>\n<p>这一期我们终于完成了 CSS 与 CSS3 基础的所有关卡，个人觉得这个 FCC 集训营的关卡中的 CSS 知识还是比较全面的。在编写这些关卡的过程中确实重温了不少前端基础，也是收益匪浅。在跟着我的教程一起闯关的同学们，也希望你们也有所收获。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我是<font color=\"#60AAF8\"><b>三钻</b></font>，一个在<font color=\"#60AAF8\"><b>技术银河</b></font>中等和你们一起来终身漂泊学习。<br>点赞是力量，关注是认可，评论是关爱！下期再见 👋！</p></blockquote>\n<h2 id=\"系列阅读\"><a href=\"#系列阅读\" class=\"headerlink\" title=\"系列阅读\"></a>系列阅读</h2><ol>\n<li>🔥<a href=\"https://blog.csdn.net/TriDiamond6/article/details/105915758\">《勇闯 28 个关卡学会 HTML 与 HTML5 基础》</a> —— 这周我们一起闯过了 22 关，下一期我们会一起把剩余的 22 关完成。学习是一种像爬山一样的过程，要经历过漫长的上坡路，一步一个脚印。“路漫漫其修远兮，吾将上下而求索。”， 在追寻知识的道路上，前方的道路还很漫长，但我们将百折不挠，不遗余力地，上天下地的去追求和探索。让我们继续坚持学习，终身学习成长。在大前端的时代爬到技术的巅峰，做一个有深度的技术人员。</li>\n<li>🔥<a href=\"https://blog.csdn.net/TriDiamond6/article/details/106048140\">《44 关学习 CSS 与 CSS3 基础「一」》</a> —— 这一期我们一起攻破前端第二大知识点《CSS 基础入门》。因为这一课一共有 44 关，我把文章分成两期更新。</li>\n</ol>\n<h2 id=\"推荐系列\"><a href=\"#推荐系列\" class=\"headerlink\" title=\"推荐系列\"></a>推荐系列</h2><p>小伙伴们可以<strong>查看或者订阅相关的专栏</strong>，从而集中阅读相关知识的文章哦。</p>\n<ul>\n<li><p>📖 <a href=\"https://blog.csdn.net/tridiamond6/category_10036942.html\">《数据结构与算法》</a> — 到了如今，如果想成为一个高级开发工程师或者进入大厂，不论岗位是前端、后端还是 AI，算法都是重中之重。也无论我们需要进入的公司的岗位是否最后是做算法工程师，前提面试就需要考算法。</p>\n</li>\n<li><p>📖 <a href=\"https://blog.csdn.net/tridiamond6/category_9782493.html\">《FCC 前端集训营》</a> — 根据 FreeCodeCamp 的学习课程，一起深入浅出学习前端。稳固前端知识，一起在 FreeCodeCamp 获得证书</p>\n</li>\n<li><p>📖 <a href=\"https://blog.csdn.net/tridiamond6/category_9782493.html\">《前端星球》</a> — 以实战为线索，深入浅出前端多维度的知识点。内含有多方面的前端知识文章，带领不懂前端的童鞋一起学习前端，在前端开发路上童鞋一起燃起心中那团火 🔥</p>\n</li>\n</ul>\n","text":"我有一段时间没有更新 FCC 前端教程了，这一周就继续写完 CSS 与 CSS3 基础的教程。最近工作和生活都比较繁忙所以文章更新也受到了一定的影响。不过技术文章写作再忙也不会放弃的。我会继续努力坚持着一周一篇文章的进度，继续为大家带来我学习到的知识。让我们一起继续终身学习吧！ ...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":10,"path":"api/categories/FrontEnd.json"}],"tags":[{"name":"HTML&CSS","slug":"HTML-CSS","count":4,"path":"api/tags/HTML-CSS.json"},{"name":"Free Code Camp","slug":"Free-Code-Camp","count":3,"path":"api/tags/Free-Code-Camp.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%89%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8%E5%B1%9E%E6%80%A7%E9%80%89%E6%8B%A9%E5%99%A8%E6%94%B9%E5%8F%98%E5%85%83%E7%B4%A0%E5%B1%9E%E6%80%A7\"><span class=\"toc-text\">「第二十三关」使用属性选择器改变元素属性</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%9B%9B%E5%85%B3%E3%80%8D%E7%BB%9D%E5%AF%B9%E4%B8%8E%E7%9B%B8%E5%AF%B9%E5%8D%95%E4%BD%8D\"><span class=\"toc-text\">「第二十四关」绝对与相对单位</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-1\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-1\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-1\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-1\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-1\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%BA%94%E5%85%B3%E3%80%8DHTML-%E4%B8%BB%E4%BD%93%E5%B1%9E%E6%80%A7%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">「第二十五关」HTML 主体属性样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-2\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-2\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-2\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-2\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-2\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AD%E5%85%B3%E3%80%8D%E4%BB%8E%E4%B8%BB%E4%BD%93%E5%85%83%E7%B4%A0%E4%B8%AD%E7%BB%A7%E6%89%BF%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">「第二十六关」从主体元素中继承样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-3\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-3\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-3\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-3\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-3\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B8%83%E5%85%B3%E3%80%8DCSS-%E6%A0%B7%E5%BC%8F%E7%BB%A7%E6%89%BF%E4%B8%AD%E6%A0%B7%E5%BC%8F%E4%BC%98%E5%85%88%E7%BA%A7\"><span class=\"toc-text\">「第二十七关」CSS 样式继承中样式优先级</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-4\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-4\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-4\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-4\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-4\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%BA%8C%E5%8D%81%E5%85%AB%E5%85%B3%E3%80%8D%E8%A6%86%E7%9B%96%E5%90%8E%E7%BB%AD-CSS-%E4%B8%AD%E7%9A%84%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">「第二十八关」覆盖后续 CSS 中的样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-5\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-5\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-5\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-5\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-5\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%BA%8C%E5%8D%81%E4%B9%9D%E5%85%B3%E3%80%8D%E9%80%9A%E8%BF%87%E4%BD%BF%E7%94%A8-ID-%E5%B1%9E%E6%80%A7%E8%A6%86%E7%9B%96%E7%B1%BB%E5%B1%9E%E6%80%A7%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">「第二十九关」通过使用 ID 属性覆盖类属性样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-6\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-6\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-6\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-6\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-6\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8%E8%A1%8C%E5%86%85%E6%A0%B7%E5%BC%8F%E8%A6%86%E7%9B%96%E7%B1%BB%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">「第三十关」使用行内样式覆盖类样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-7\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-7\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-7\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-7\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-7\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%80%E5%85%B3%E3%80%8D%E7%94%A8-Important-%E8%A6%86%E7%9B%96%E6%89%80%E6%9C%89%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">「第三十一关」用 Important 覆盖所有样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-8\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-8\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-8\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-8\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-8\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%8C%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8-Hex-%E4%BB%A3%E7%A0%81%E6%8C%87%E5%AE%9A%E7%89%B9%E5%AE%9A%E9%A2%9C%E8%89%B2\"><span class=\"toc-text\">「第三十二关」使用 Hex 代码指定特定颜色</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-9\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-9\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-9\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-9\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-9\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%89%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8%E5%8D%81%E5%85%AD%E8%BF%9B%E5%88%B6%E4%BB%A3%E7%A0%81%E6%9D%A5%E6%B7%B7%E5%90%88%E9%A2%9C%E8%89%B2\"><span class=\"toc-text\">「第三十三关」使用十六进制代码来混合颜色</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-10\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-10\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-10\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-10\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-10\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E5%9B%9B%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8-Hex-%E9%A2%9C%E8%89%B2%E7%A0%81%E7%BC%A9%E5%86%99\"><span class=\"toc-text\">「第三十四关」使用 Hex 颜色码缩写</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-11\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-11\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-11\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-11\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-11\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E4%BA%94%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8-RGB-%E5%80%BC%E6%94%B9%E5%8F%98%E5%85%83%E7%B4%A0%E9%A2%9C%E8%89%B2\"><span class=\"toc-text\">「第三十五关」使用 RGB 值改变元素颜色</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-12\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-12\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-12\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-12\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-12\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AD%E5%85%B3%E3%80%8D%E7%94%A8-RGB-%E6%9D%A5%E6%B7%B7%E5%90%88%E9%A2%9C%E8%89%B2\"><span class=\"toc-text\">「第三十六关」用 RGB 来混合颜色</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-13\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-13\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-13\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-13\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-13\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B8%83%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8-CSS-%E5%8F%98%E9%87%8F%E5%90%8C%E6%97%B6%E6%94%B9%E5%8F%98%E5%A4%9A%E4%B8%AA%E5%85%83%E7%B4%A0%E6%A0%B7%E5%BC%8F\"><span class=\"toc-text\">「第三十七关」使用 CSS 变量同时改变多个元素样式</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-14\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-14\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-14\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-14\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-14\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E5%85%AB%E5%85%B3%E3%80%8D%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">「第三十八关」创建自定义 CSS 变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-15\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-15\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-15\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-15\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-15\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E4%B8%89%E5%8D%81%E4%B9%9D%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8%E8%87%AA%E5%AE%9A%E4%B9%89-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">「第三十九关」使用自定义 CSS 变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-16\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-16\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-16\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-16\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-16\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%85%B3%E3%80%8D%E7%BB%99-CSS-%E5%8F%98%E9%87%8F%E5%8A%A0%E4%B8%8A%E5%9B%9E%E9%80%80%E5%80%BC\"><span class=\"toc-text\">「第四十关」给 CSS 变量加上回退值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-17\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-17\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-17\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-17\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-17\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%80%E5%85%B3%E3%80%8DCSS-%E5%8F%98%E9%87%8F%E7%9A%84%E6%B5%8F%E8%A7%88%E5%99%A8%E5%85%BC%E5%AE%B9\"><span class=\"toc-text\">「第四十一关」CSS 变量的浏览器兼容</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-18\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-18\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-18\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-18\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-18\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%BA%8C%E5%85%B3%E3%80%8D%E7%BB%A7%E6%89%BF-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">「第四十二关」继承 CSS 变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-19\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-19\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-19\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-19\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-19\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E5%9B%9B%E5%8D%81%E4%B8%89%E5%85%B3%E3%80%8D%E5%9C%A8%E7%89%B9%E5%AE%9A%E5%9C%B0%E6%96%B9%E6%94%B9%E5%8F%98-CSS-%E5%8F%98%E9%87%8F\"><span class=\"toc-text\">「第四十三关」在特定地方改变 CSS 变量</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-20\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-20\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-20\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-20\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-20\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E7%AC%AC%E5%9B%9B%E5%8D%81%E5%9B%9B%E5%85%B3%E3%80%8D%E4%BD%BF%E7%94%A8%E5%AA%92%E4%BD%93%E6%9F%A5%E8%AF%A2%E6%9D%A5%E4%BF%AE%E6%94%B9%E5%8F%98%E9%87%8F%E5%80%BC\"><span class=\"toc-text\">「第四十四关」使用媒体查询来修改变量值</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E8%AF%86%E7%82%B9-21\"><span class=\"toc-text\">知识点</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E7%9B%AE%E6%A0%87-21\"><span class=\"toc-text\">过关目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%87%E5%85%B3%E6%9D%A1%E4%BB%B6-21\"><span class=\"toc-text\">过关条件</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%A6%E4%BC%9A%E4%BA%86%E4%BB%80%E4%B9%88%EF%BC%9F-21\"><span class=\"toc-text\">学会了什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%AD%94%E6%A1%88-21\"><span class=\"toc-text\">答案</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E3%80%8C%E6%80%BB%E7%BB%93%E3%80%8D\"><span class=\"toc-text\">「总结」</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B3%BB%E5%88%97%E9%98%85%E8%AF%BB\"><span class=\"toc-text\">系列阅读</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A8%E8%8D%90%E7%B3%BB%E5%88%97\"><span class=\"toc-text\">推荐系列</span></a></li></ol></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"prev_post":{"title":"一篇文章搞懂前端学习方法与构建知识体系","uid":"78111f2bf31f70cf67b6b3119a253d63","slug":"frontend/frontend-study","date":"2020-08-07T14:55:14.000Z","updated":"2023-07-25T14:47:10.197Z","comments":true,"path":"api/articles/frontend/frontend-study.json","keywords":null,"cover":"https://source.unsplash.com/yQnyP1g5zl4/1200x628","text":"在大前端的成长路上，很多的同学都非常的迷茫，看到一座座越来越高的山。慢慢在工作中也对自己的职业发展也特别迷茫。有些粉丝也私信我问过我一些职业发展的问题，还有“我应该学习什么技术？”，“学习到什么层级才是个头”。 这次我给大家带来一遍文章，给大家讲讲怎么样才是一个优秀的前端工程师，...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":10,"path":"api/categories/FrontEnd.json"}],"tags":[{"name":"FrontEnd","slug":"FrontEnd","count":1,"path":"api/tags/FrontEnd.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"力扣实战之移动零、盛最多的水、爬楼梯","uid":"1781b683e9507c36c168e35402e3a5a4","slug":"algorithm/leetcode-moveZero-water-stairs","date":"2020-06-24T22:03:17.000Z","updated":"2023-07-25T14:47:10.193Z","comments":true,"path":"api/articles/algorithm/leetcode-moveZero-water-stairs.json","keywords":null,"cover":"https://source.unsplash.com/Zt5KC97bAHQ/1200x628","text":"练题法则5-10 分钟读题与思考 不要纠结没有思路就直接看题解； 不要死磕觉得自己很失败，怎么我们就想不出来； 基本上这些算法题，让我们自己想出来是不可能的； 拿跳表的来说，如果我们能从 0-1 把它想出来，那我们就可以拿到图灵奖了； 所以记住！无思路就直接看题解，无思路就直接看...","link":"","photos":[],"count_time":{"symbolsCount":"9.1k","symbolsTime":"8 mins."},"categories":[{"name":"Algorithm","slug":"Algorithm","count":4,"path":"api/categories/Algorithm.json"}],"tags":[{"name":"LeetCode","slug":"LeetCode","count":1,"path":"api/tags/LeetCode.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}