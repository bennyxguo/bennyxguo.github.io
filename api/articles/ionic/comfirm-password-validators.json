{"title":"IONIC 2 - 确认密码","uid":"b0927e1c3835a3a3456ac936677ed5d9","slug":"ionic/comfirm-password-validators","date":"2017-03-19T00:00:00.000Z","updated":"2023-07-29T01:31:41.739Z","comments":true,"path":"api/articles/ionic/comfirm-password-validators.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571186961/blog/ionic_cover_hvzkwo.png","content":"<p>开发过程中一般在注册或者修改密码都要写一个密码确认的表格, 这篇文章就是记录怎么在Ionic2里面使用<strong>FormBuilder</strong>和<strong>Validators</strong>判断密码是否一致.</p>\n<p>首先这篇文章是默认您已经了解怎么使用<strong>Angualr2</strong>的<strong>FormBuilder</strong>和<strong>Validator</strong>, 如果你还没了解这两个类的用法可以前去看<a href=\"https://ionicframework.com/docs/v2/resources/forms/\">Ionic2的文档</a></p>\n<h1 id=\"实例一个FormGroup\"><a href=\"#实例一个FormGroup\" class=\"headerlink\" title=\"实例一个FormGroup\"></a>实例一个<code>FormGroup</code></h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>第一步首先我们需要实例了FormBuilder的一个FormGroup</p></blockquote>\n<ul>\n<li>这里我们定义了passwordForm的这个表格里面的input.</li>\n<li>在最后我们加入了自定义认证方法 { validator: AdvanceValidator.matchingPasswords(‘password’, ‘rePassword’) }</li>\n<li>这里我们把password, 和rePassword 传给了 AdvanceValidator 方法, 这里传的是密码和确认密码在FormGroup里面定义的名字.</li>\n<li>现在我们看看这个password.ts怎么写.</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">import &#123; FormBuilder, Validators, FormGroup &#125; from &#39;@angular&#x2F;forms&#39;;\nimport &#123; AdvanceValidator &#125; from &#39;..&#x2F;..&#x2F;validators&#x2F;advance-validator&#39;;\n\n@Component(&#123;\n  selector: &#39;page-password&#39;,\n  templateUrl: &#39;password.html&#39;\n&#125;)\n\n&#x2F;&#x2F;密码修改页\nexport class PasswordPage &#123;\n  passwordForm: FormGroup;\n\n  constructor(private fb: FormBuilder) \n  &#123;\n    \n    this.passwordForm &#x3D; fb.group(&#123;\n        username: [&#39;&#39;, Validators.required],\n        password: [&#39;&#39;, Validators.compose([Validators.maxLength(30), Validators.minLength(7), Validators.required])],\n        rePassword: [&#39;&#39;, Validators.compose([Validators.maxLength(30), Validators.minLength(7), Validators.required])],\n    &#125;, &#123; validator: AdvanceValidator.matchingPasswords(&#39;password&#39;, &#39;rePassword&#39;) &#125;);\n    \n  &#125;\n&#125;</code></pre>\n\n<h1 id=\"创建自定义认证器\"><a href=\"#创建自定义认证器\" class=\"headerlink\" title=\"创建自定义认证器\"></a>创建自定义认证器</h1><ul>\n<li>我们首先在项目根目录创建 <strong>validators</strong> 的文件夹</li>\n<li>然后在里面创建 <strong>advance-validators.ts</strong> 的ts文件</li>\n<li>在 <strong>advance-validators.ts</strong> 里面编以下代码</li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">import &#123; FormGroup &#125; from &#39;@angular&#x2F;forms&#39;;\n\nexport class AdvanceValidator &#123;\n\n\tstatic matchingPasswords(passwordKey: string, rePasswordKey: string) &#123;\n    return (group: FormGroup) &#x3D;&gt; &#123;\n      let password &#x3D; group.controls[passwordKey]; &#x2F;&#x2F;获取密码值\n      let rePassword &#x3D; group.controls[rePasswordKey]; &#x2F;&#x2F;获取确认密码值\n\n      if(password.value !&#x3D;&#x3D; rePassword.value) &#123;\n        &#x2F;&#x2F;如果密码和确认密码的值不一致就返回给FormBuild rePassword有错误\n        return rePassword.setErrors(&#123;notEquivalent: true&#125;) \n      &#125;\n    &#125;\n  &#125;\n&#125;</code></pre>\n\n<h1 id=\"前端表格示例\"><a href=\"#前端表格示例\" class=\"headerlink\" title=\"前端表格示例\"></a>前端表格示例</h1><pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;form [formGroup] &#x3D; &quot;passwordForm&quot;&gt;\n  &lt;ion-list inset&gt;\n\n    &lt;ion-item&gt;\n      &lt;ion-input type&#x3D;&quot;tel&quot; placeholder&#x3D;&quot;用户名&quot; formControlName&#x3D;&quot;username&quot;&gt;&lt;&#x2F;ion-input&gt;\n      &lt;div item-right *ngIf&#x3D;&quot;!passwordForm.controls.username.valid  &amp;&amp; (passwordForm.controls.username.dirty)&quot;&gt;\n        &lt;ion-icon name&#x3D;&quot;alert&quot;&gt;&lt;&#x2F;ion-icon&gt; 用户名必填\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;ion-item&gt;\n\n    &lt;ion-item&gt;\n      &lt;ion-input type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;新密码&quot; formControlName&#x3D;&quot;password&quot;&gt;&lt;&#x2F;ion-input&gt;\n      &lt;div item-right *ngIf&#x3D;&quot;!passwordForm.controls.password.valid  &amp;&amp; (passwordForm.controls.password.dirty)&quot; &gt;\n        &lt;ion-icon name&#x3D;&quot;alert&quot;&gt;&lt;&#x2F;ion-icon&gt; 密码必须7个字以上\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;ion-item&gt;\n\n    &lt;ion-item&gt;\n      &lt;ion-input type&#x3D;&quot;password&quot; placeholder&#x3D;&quot;确认密码&quot; formControlName&#x3D;&quot;rePassword&quot;&gt;&lt;&#x2F;ion-input&gt;\n      &lt;div item-right *ngIf&#x3D;&quot;!passwordForm.controls.rePassword.valid  &amp;&amp; (passwordForm.controls.rePassword.dirty)&quot; &gt;\n        &lt;ion-icon name&#x3D;&quot;alert&quot;&gt;&lt;&#x2F;ion-icon&gt; 密码必须一致\n      &lt;&#x2F;div&gt;\n    &lt;&#x2F;ion-item&gt;\n\n  &lt;&#x2F;ion-list&gt;\n&lt;&#x2F;form&gt;</code></pre>\n","text":"开发过程中一般在注册或者修改密码都要写一个密码确认的表格, 这篇文章就是记录怎么在Ionic2里面使用FormBuilder和Validators判断密码是否一致. 首先这篇文章是默认您已经了解怎么使用Angualr2的FormBuilder和Validator, 如果你还没了解...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Ionic","slug":"Ionic","count":6,"path":"api/categories/Ionic.json"}],"tags":[{"name":"Ionic 2","slug":"Ionic-2","count":3,"path":"api/tags/Ionic-2.json"},{"name":"Angular 2","slug":"Angular-2","count":2,"path":"api/tags/Angular-2.json"},{"name":"Hybird App","slug":"Hybird-App","count":6,"path":"api/tags/Hybird-App.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%AE%9E%E4%BE%8B%E4%B8%80%E4%B8%AAFormGroup\"><span class=\"toc-text\">实例一个FormGroup</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%87%AA%E5%AE%9A%E4%B9%89%E8%AE%A4%E8%AF%81%E5%99%A8\"><span class=\"toc-text\">创建自定义认证器</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E8%A1%A8%E6%A0%BC%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">前端表格示例</span></a></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"prev_post":{"title":"IONIC 2 升级 3 教程","uid":"4e215602f6b85cde51a96fad4b3567e1","slug":"ionic/upgrade-guide","date":"2017-04-10T00:00:00.000Z","updated":"2023-07-29T01:31:41.739Z","comments":true,"path":"api/articles/ionic/upgrade-guide.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571186961/blog/ionic_cover_hvzkwo.png","text":"升级步骤 这一次的升级Ionic 3 换成了使用最新的Angular 4.0, 最新的TypeScript, 添加了懒加载和修复了一些组件的bug. 首先更新package.json, 按照以下的代码相应替换你package.json里面的代码, 并且把你项目根目录下的node_...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"Ionic","slug":"Ionic","count":6,"path":"api/categories/Ionic.json"}],"tags":[{"name":"Hybird App","slug":"Hybird-App","count":6,"path":"api/tags/Hybird-App.json"},{"name":"Ionic 3","slug":"Ionic-3","count":3,"path":"api/tags/Ionic-3.json"},{"name":"Angular 4","slug":"Angular-4","count":4,"path":"api/tags/Angular-4.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"Laravel 5.4 开发笔记","uid":"125c86bde17506b74edca579610bbf0d","slug":"laravel/laravel5.4-passport-and-authen","date":"2017-02-26T00:00:00.000Z","updated":"2023-07-29T01:31:41.739Z","comments":true,"path":"api/articles/laravel/laravel5.4-passport-and-authen.json","keywords":null,"cover":"https://s2.ax1x.com/2019/09/18/noYn41.png","text":"Laravel最近出的Laravel5.4新加了挺多功能的, 比起我用了1年的5.1完善多了. 比较吸引我使用最新的5.4的有几点: 5.4 添加了谷歌内核的浏览器模拟操作 自带API认证类”PASSPORT” 路由自动分类, 现有有了Route自己的文件夹然后里面分类好了WEB...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel 5.4","slug":"Laravel-5-4","count":1,"path":"api/tags/Laravel-5-4.json"},{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}