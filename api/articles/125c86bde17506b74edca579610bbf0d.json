{"title":"Laravel 5.4 开发笔记","uid":"125c86bde17506b74edca579610bbf0d","slug":"125c86bde17506b74edca579610bbf0d","date":"2017-02-26T00:00:00.000Z","updated":"2023-08-18T12:19:22.318Z","comments":true,"path":"api/articles/125c86bde17506b74edca579610bbf0d.json","keywords":null,"cover":"https://s2.ax1x.com/2019/09/18/noYn41.png","content":"<p>Laravel最近出的Laravel5.4新加了挺多功能的, 比起我用了1年的5.1完善多了. 比较吸引我使用最新的5.4的有几点:</p>\n<ul>\n<li>5.4 添加了谷歌内核的浏览器模拟操作</li>\n<li>自带API认证类”PASSPORT”</li>\n<li>路由自动分类, 现有有了Route自己的文件夹然后里面分类好了WEB和API的路由<br>这一篇记录会分享一些我在尝试Laravel 5.4的过程中遇到的问题和经验</li>\n</ul>\n<h2 id=\"开发记录\"><a href=\"#开发记录\" class=\"headerlink\" title=\"开发记录\"></a>开发记录</h2><h3 id=\"移植-Migrate-用户和API认证表格是出现sql错误\"><a href=\"#移植-Migrate-用户和API认证表格是出现sql错误\" class=\"headerlink\" title=\"移植(Migrate)用户和API认证表格是出现sql错误\"></a>移植(Migrate)用户和API认证表格是出现sql错误</h3><pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\">[Illuminate\\Database\\QueryException]                                                         \n  SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key  \n   length is 767 bytes (SQL: alter table &#96;users&#96; add unique &#96;users_email_unique&#96;(&#96;email&#96;))   </code></pre>\n\n<pre class=\"line-numbers language-console\" data-language=\"console\"><code class=\"language-console\">[PDOException]                                                                               \n  SQLSTATE[42000]: Syntax error or access violation: 1071 Specified key was too long; max key  \n   length is 767 bytes  </code></pre>\n\n<p>解决办法就是在<strong>app&#x2F;Providers&#x2F;AppServiceProvider.php</strong>的这个文件里面的<strong>boot</strong>方法里面添加一下代码:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">use Illuminate\\Support\\Facades\\Schema;\n\nfunction boot()\n&#123;\n    Schema::defaultStringLength(191);\n&#125;</code></pre>\n\n<h3 id=\"怎么不使用Laravel5-4自带的用户登录字段\"><a href=\"#怎么不使用Laravel5-4自带的用户登录字段\" class=\"headerlink\" title=\"怎么不使用Laravel5.4自带的用户登录字段\"></a>怎么不使用Laravel5.4自带的用户登录字段</h3><p>每次使用laravel自带的用户认证体系都会纠结, 怎么不用它自带的email作为用户名!<br>这次适用Laravel5.4 又遇到了这个问题, 而且解决办法和5.1,5.2的不一样了, 因为Laravel的Auth Provider变动了.<br>解决办法就是在自带的<strong>User.php</strong>(用户模型)里面使用<strong>findForPassport</strong>, 参考一下例子:</p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">class User extends Authenticatable\n&#123;\n    use HasApiTokens, Notifiable;\n\n    &#x2F;&#x2F; ... some code\n\n    public function findForPassport($username) &#123;\n        return $this-&gt;where(&#39;id&#39;, $username)-&gt;first();\n    &#125;\n&#125;</code></pre>\n\n","text":"Laravel最近出的Laravel5.4新加了挺多功能的, 比起我用了1年的5.1完善多了. 比较吸引我使用最新的5.4的有几点: 5.4 添加了谷歌内核的浏...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"Laravel","slug":"Laravel","count":3,"path":"api/categories/Laravel.json"}],"tags":[{"name":"Laravel 5.4","slug":"Laravel-5-4","count":1,"path":"api/tags/Laravel-5-4.json"},{"name":"Laravel Passport","slug":"Laravel-Passport","count":3,"path":"api/tags/Laravel-Passport.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BC%80%E5%8F%91%E8%AE%B0%E5%BD%95\"><span class=\"toc-text\">开发记录</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E6%A4%8D-Migrate-%E7%94%A8%E6%88%B7%E5%92%8CAPI%E8%AE%A4%E8%AF%81%E8%A1%A8%E6%A0%BC%E6%98%AF%E5%87%BA%E7%8E%B0sql%E9%94%99%E8%AF%AF\"><span class=\"toc-text\">移植(Migrate)用户和API认证表格是出现sql错误</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%8E%E4%B9%88%E4%B8%8D%E4%BD%BF%E7%94%A8Laravel5-4%E8%87%AA%E5%B8%A6%E7%9A%84%E7%94%A8%E6%88%B7%E7%99%BB%E5%BD%95%E5%AD%97%E6%AE%B5\"><span class=\"toc-text\">怎么不使用Laravel5.4自带的用户登录字段</span></a></li></ol></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"hidden":false,"prev_post":{"title":"IONIC 2 - 确认密码","uid":"b0927e1c3835a3a3456ac936677ed5d9","slug":"b0927e1c3835a3a3456ac936677ed5d9","date":"2017-03-19T00:00:00.000Z","updated":"2023-08-18T12:19:22.318Z","comments":true,"path":"api/articles/b0927e1c3835a3a3456ac936677ed5d9.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571186961/blog/ionic_cover_hvzkwo.png","text":"开发过程中一般在注册或者修改密码都要写一个密码确认的表格, 这篇文章就是记录怎么在Ionic2里面使用FormBuilder和Validators判断密码是否一...","link":"","photos":[],"count_time":{"symbolsCount":"3.6k","symbolsTime":"3 mins."},"categories":[{"name":"Ionic","slug":"Ionic","count":6,"path":"api/categories/Ionic.json"}],"tags":[{"name":"Ionic 2","slug":"Ionic-2","count":3,"path":"api/tags/Ionic-2.json"},{"name":"Angular 2","slug":"Angular-2","count":2,"path":"api/tags/Angular-2.json"},{"name":"Hybird App","slug":"Hybird-App","count":6,"path":"api/tags/Hybird-App.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"IONIC 2 开发笔记","uid":"a148b49e403314cabbbd91168179ddad","slug":"a148b49e403314cabbbd91168179ddad","date":"2017-02-25T00:00:00.000Z","updated":"2023-08-18T12:19:22.318Z","comments":true,"path":"api/articles/a148b49e403314cabbbd91168179ddad.json","keywords":null,"cover":"https://res.cloudinary.com/tridiamond/image/upload/v1571186961/blog/ionic_cover_hvzkwo.png","text":"因为IONIC2才刚刚开始进入正式版, 中文文档基本都是不全的, 我现在开发都是在看英文文档在开发的过程中遇到了很多文档没有描述的问题, 而且开发的过程中遇到一...","link":"","photos":[],"count_time":{"symbolsCount":"3.1k","symbolsTime":"3 mins."},"categories":[{"name":"Ionic","slug":"Ionic","count":6,"path":"api/categories/Ionic.json"}],"tags":[{"name":"Ionic 2","slug":"Ionic-2","count":3,"path":"api/tags/Ionic-2.json"},{"name":"Angular 2","slug":"Angular-2","count":2,"path":"api/tags/Angular-2.json"},{"name":"Hybird App","slug":"Hybird-App","count":6,"path":"api/tags/Hybird-App.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"<p>Programming a piece of art.</p> <p>用<b>匠人精神</b>开发出<b>艺术</b>。</p>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"https://tridiamond.tech/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}