{"title":"真正的`服务层`是怎么写的?","uid":"a39070ddc42fa1b74b93b830b684f61e","slug":"backend/how-to-write-a-service","date":"2019-10-19T00:01:58.000Z","updated":"2023-08-09T20:49:48.447Z","comments":true,"path":"api/articles/backend/how-to-write-a-service.json","keywords":null,"cover":"https://source.unsplash.com/WSw-taiyZPk/1200x628","content":"<p>其实很多系统架构里面都有服务层，但是服务对很多开发人员来说都有很多不同的定义和写法。甚至在我待过的公司里都有不同的写法和编写模式。每个人每个团队每个项目都有对服务不同的理解。那到底什么是服务，怎么理解才是对的呢？</p>\n<p>你们有没有过无数个夜晚里严重怀疑人生，琢磨着到底哪一种服务才是对的？哪一种才是最好的写法，哪一种才能达到服务的真正意义？因为这种执着，我开始在国外的各种网站，大神们写过的开源大项目里面和文章里面总结出一个大多数研发伙伴们认可的理解方式和编写方式。</p>\n<p>要理解什么是服务，我们先来给<code>服务</code>一个<code>定义</code>，在系统架构里面处于什么<code>角色</code>，<code>作用</code>是什么。</p>\n<hr>\n<h2 id=\"服务定义\"><a href=\"#服务定义\" class=\"headerlink\" title=\"服务定义\"></a>服务定义</h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>角色</code>：服务是系统架构里面的业务处理层。<br><code>作用</code>：主要是为了高度解耦和封装不同场景的业务和功能到对应的服务，然而达到高度中心化的业务代码。</p></blockquote>\n<p>这个定义没毛病吧？赞同的童鞋在评论里举个手哈 👋。<br>好，有了一个优雅高尚的<code>服务定义</code>，我们来用一个通俗易懂的例子来理解服务。</p>\n<hr>\n<h2 id=\"理解服务\"><a href=\"#理解服务\" class=\"headerlink\" title=\"理解服务\"></a>理解服务</h2><ul>\n<li>假设<code>人</code>是一个<code>控制器</code>，现在拿到了一个<code>衣服对象</code>的<code>参数</code>，然后人拥有一个<code>洗衣服</code>的<code>方法</code></li>\n<li>现在人需要洗衣服，但是手洗效率太低了，所以我们写了一个多功能的<code>洗衣机服务</code>给到人去使用</li>\n<li><code>洗衣机</code>这个服务里面有很多不同洗衣服的<code>方法</code>，但是其实具体洗衣机里面的每一个清洗方法人是不知道怎么实现的，人都是直接按照提供的功能直接使用。</li>\n<li>所以所有服务里面的方法都是解耦在服务里面，服务要提供的方法是可以方便人使用的。</li>\n</ul>\n<hr>\n<p>这样说是不是很好理解了？所以最简单的理解就是：</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>服务是用来封装业务逻辑代码，是一个独立的逻辑层，高度封装解耦后提供给控制器或者其他需要用到这个服务的地方使用的。</p></blockquote>\n<hr>\n<h2 id=\"编写思路\"><a href=\"#编写思路\" class=\"headerlink\" title=\"编写思路\"></a>编写思路</h2><p>❌ <code>错误例子</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>把所有洗衣机的方法提供给人使用，那就等同于让人来决定所有洗衣机的参数和清洗步骤。那人放衣服到洗衣机后，要选择先加水，加多少水，然后清洗开始，清洗多久，再甩干等等。</p></blockquote>\n<p>就想想这个洗衣机就不想用了，洗个衣服那么多选项，还要想那个设置顺序才是对的！ 我太难了！洗个鸡腿哦！(ﾉ｀ □ ´)ﾉ ⌒┻━┻</p>\n<p>⭕️ <code>正确例子</code></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>洗衣机服务实现了很多不同的常用洗衣服的<code>模式</code>, 比如快速清洗，毛衣清洗，地毯清洗，风干，甩干等等。都是一些常用的功能。<br>每个功能方法里面其实调用了很多洗衣机封装好的流程和方法。这样人使用洗衣机根本不需要知道这些功能是怎么实现的，只要知道自己要干嘛，洗衣机有这个模式，直接用就好了。</p></blockquote>\n<p>(✧ᗜ✧)👍 哇！ 介么人性化的么！这种洗衣机给我来一打谢谢！<br>思路我们整理清楚了，那么可以开始看看用这种思维模式写成代码是怎么样的。来上机械键盘，开始快乐滴敲代码了！</p>\n<h2 id=\"服务写法\"><a href=\"#服务写法\" class=\"headerlink\" title=\"服务写法\"></a>服务写法</h2><h3 id=\"Controller-控制器\"><a href=\"#Controller-控制器\" class=\"headerlink\" title=\"Controller 控制器\"></a>Controller 控制器</h3><p>首先我们写一个人控制器<code>PersonController.php</code>，作为一个优秀的人类，我们天生就会洗衣服，但是人嘛天生就是懒惰的。所以我们买了一台洗衣机（实现洗衣机<code>服务</code>）并且我们学会了使用洗衣机来洗衣服。（实现<code>wash</code>方法）٩(◦&#96;꒳´◦)۶</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>一个人<code>PersonController</code>，有一个洗衣服方法<code>wash</code>，需要洗衣服的时候实例洗衣服务<code>new WashingMachineServer()</code>，然后只要把衣服传入洗衣机服务的快洗方法，洗衣机服务就会开始快速<code>quickWash($cloth)</code>清洗了。</p></blockquote>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">&#x2F;&#x2F; 人控制器\nclass PersonController\n&#123;\n    &#x2F;**\n    * 洗衣服方法\n    *\n    * @param object $cloth 衣服对象\n    *&#x2F;\n    public function wash($cloth)\n    &#123;\n        $washingMachine &#x3D; new WashingMachineService();\n        $washingMachine-&gt;quickWash($cloth); &#x2F;&#x2F; 调用洗衣机的快速清洗功能\n    &#125;\n&#125;</code></pre>\n\n<p>我们好奇的童鞋们，肯定会好奇，那这个洗衣机（<code>WashingMachineService.php</code>服务) 到底是怎么实现的呢？它的快洗功能是怎么做的呢？那我们就来自己建一部洗衣机，自然就懂了。</p>\n<h3 id=\"Service-服务\"><a href=\"#Service-服务\" class=\"headerlink\" title=\"Service 服务\"></a>Service 服务</h3><p>动手之前我们要先思考，先分析，养成这样的好习惯，代码再也不难写了。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>分析的重点分为服务的<code>运作</code>和<code>流程</code>, 可变动的<code>属性</code>，最后就是有那些可以提供的<code>模式</code>。</p></blockquote>\n<ul>\n<li><strong>洗衣机应该怎么<code>运作</code>和<code>流程</code>的：</strong><ol>\n<li>把衣服放入洗衣机 <code>addCloth()</code></li>\n<li>注入水到洗衣机里 <code>addWater()</code></li>\n<li>开始洗衣服（开始旋转和各种累活）<code>wash()</code></li>\n<li>把水排除洗衣机 <code>flushWater()</code></li>\n<li>把衣服取出 <code>fetchClouth()</code></li>\n</ol>\n</li>\n<li><strong>洗衣机可变动的<code>属性</code>：</strong><ul>\n<li>要把衣服放入洗衣机，我们就需要有个东西来装着，然后才能清洗，所以我们应该有一个洗衣桶 <code>$bucket</code></li>\n<li>根据衣服的量，使用的水量是应该可以调节的。（对我们要节约用水嘛）<code>$washDuration</code></li>\n</ul>\n</li>\n<li><strong>洗衣机最常用的<code>模式</code>：</strong><ul>\n<li>快速洗 <code>quickWash()</code></li>\n</ul>\n</li>\n</ul>\n<hr>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>⚠️ 需要注意：</strong></p>\n<ul>\n<li>所有洗衣机的内部方法都是 <code>private</code> 私有方法，因为都是给洗衣机使用的，外部的人是不能使用的；</li>\n<li><code>快速清洗</code>和<code>取衣服</code>这两个方法是 <code>public</code> 共有方法，因为是洗衣机提供出去给人使用的方法；</li>\n<li>所有属性都是 <code>protected</code> 保护属性，是洗衣机独有的属性。</li>\n</ul></blockquote>\n<p>现在我们就要使用程序员的魔法，把以上的逻辑和属性转换成代码。<code>(∩◉ω◉)⊃----★</code></p>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">class WashingMachineService\n&#123;\n    &#x2F;**\n    * 清洗时长 (分钟)\n    * @var integer\n    *&#x2F;\n    protected $washDuration &#x3D; 60;\n\n    &#x2F;**\n    * 洗衣机的洗衣桶\n    * @var array\n    *&#x2F;\n    protected $bucket;\n\n    &#x2F;**\n    * 改变默认洗衣机的清洗时长\n    * @param integer $duration\n    *&#x2F;\n    public function changeWashDuration($duration)\n    &#123;\n        $this-&gt;washDuration &#x3D; intval($duration);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 往洗衣机的桶加入水\n    *&#x2F;\n    private function addWater()\n    &#123;\n        array_merge($this-&gt;bucket, [&#39;water&#39; &#x3D;&gt; &#39;cold water&#39;]);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 把衣服加入洗衣机桶内\n    *&#x2F;\n    private function addCloth($cloth)\n    &#123;\n        array_merge($this-&gt;bucket, [&#39;cloths&#39; &#x3D;&gt; $cloth]);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 旋转桶把开始洗衣服\n    *&#x2F;\n    private function wash()\n    &#123;\n        &#x2F;&#x2F; 使用洗衣机的清洗时长来全换清洗衣服\n        for ($duration &#x3D; $this-&gt;washDuration; $duration &gt; 0; $duration--) &#123;\n            array_rand($this-&gt;bucket, 3);\n        &#125;\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 把桶里面的水清除掉\n    *&#x2F;\n    private function flushWater()\n    &#123;\n        unset($this-&gt;bucket[&#39;water&#39;]);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 从洗衣桶里面把衣服拿回出来\n    *&#x2F;\n    private function fetchCloths()\n    &#123;\n        return $this-&gt;bucket[&#39;cloths&#39;]\n    &#125;\n\n    &#x2F;**\n    * 快速清洗衣服方法\n    *&#x2F;\n    public function quickWash($cloth)\n    &#123;\n        return $this-&gt;changeWashDuration(10) &#x2F;&#x2F; 重新设置洗衣服的时长\n                    -&gt;addCloth($cloth) &#x2F;&#x2F; 加入衣服\n                    -&gt;addWater() &#x2F;&#x2F; 加入水\n                    -&gt;wash() &#x2F;&#x2F; 开始清洗\n                    -&gt;flushWater() &#x2F;&#x2F; 清除水\n                    -&gt;fetchCloths(); &#x2F;&#x2F; 最后取出衣服返回\n    &#125;\n&#125;</code></pre>\n\n<p>以上就是一个最基础的服务，有独立的内部方法可以让服务运作起来，也有提供出去的服务模式方法。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>⚠️ 需要注意</strong>:<br>服务的重点特性在最后这个 <code>quickWash</code> 快速清洗方法。实现快速清洗是通过使用特定<code>顺序</code>和<code>组合</code>方式调用洗衣机<code>内部方法</code>。这种服务的实现方式，可以把一个服务里面的业务逻辑拆分成多个逻辑块，然后通过不同的顺序和组合来实现某种模式或者功能。这样的服务就非常有弹性，而且所有逻辑块复用性极高。这个也是设计模式里面的<code>模版方法模式（Template Method）</code>。</p></blockquote>\n<p>上面的例子只是写了一个洗衣机 10%不到的功能，一个完整的洗衣机还会有很多的逻辑方法。那问题就来了，方法多了这个服务就会开始臃肿。这个时候我们就要想一套解耦封装服务的方式方法。接下来我们来讲解一下怎么更深度的服务封装。</p>\n<hr>\n<h2 id=\"服务封装\"><a href=\"#服务封装\" class=\"headerlink\" title=\"服务封装\"></a>服务封装</h2><p>在日常开发过程中，我们有各种各样的封装和解耦方式。包括<code>内部Trait</code>, <code>内部服务</code>，<code>工厂设计模式</code>。这几种都是可以用来深度封装服务的方式方法。找到了方法，下一步就是要找到怎么封装才是最优解耦思路。解耦的原理就是找到<code>共通点</code>和<code>公用点</code>。然后把这些方法封装起来，解耦出去。</p>\n<h3 id=\"封装思路\"><a href=\"#封装思路\" class=\"headerlink\" title=\"封装思路\"></a>封装思路</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>在上面写的洗衣机服务，里面的洗衣桶是很通用的和独立的业务逻辑。所以它是可以解耦封装在一起的。</p>\n<ul>\n<li>洗衣机的<code>bucket</code>洗衣桶属性的方法其实可以封装起来。单独做为一个洗衣桶的服务。</li>\n<li>所有涉及洗衣桶操作的功能和流程都封装到洗衣桶服务里面给洗衣机调用。</li>\n</ul></blockquote>\n<p>使用上面的逻辑，我们可以把<code>洗衣机服务</code>和<code>洗衣桶服务</code>拆分成两块。来吧上机械键盘！</p>\n<hr>\n<h3 id=\"封装编写\"><a href=\"#封装编写\" class=\"headerlink\" title=\"封装编写\"></a>封装编写</h3><ul>\n<li>洗衣机服务 <code>WashingMachineService.php</code></li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">class WashingMachineService\n&#123;\n    &#x2F;**\n    * 清洗时长 (分钟)\n    * @var integer\n    *&#x2F;\n    protected $washDuration &#x3D; 60;\n\n    &#x2F;**\n    * 改变默认洗衣机的清洗时长\n    * @param integer $duration\n    *&#x2F;\n    public function changeWashDuration($duration)\n    &#123;\n        $this-&gt;washDuration &#x3D; intval($duration);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 快速清洗衣服方法\n    *&#x2F;\n    public function quickWash($cloth)\n    &#123;\n        $washingBucket &#x3D; new WashingBucketService();\n\n        $this-&gt;changeWashDuration(10) &#x2F;&#x2F; 重新设置洗衣服的时长\n\n        &#x2F;&#x2F; 调用洗衣机的桶去清洗衣服\n        return $washingBucket-&gt;addCloth($cloth) &#x2F;&#x2F; 加入衣服\n                    -&gt;addWater() &#x2F;&#x2F; 加入水\n                    -&gt;wash($this-&gt;washDuration) &#x2F;&#x2F; 开始清洗\n                    -&gt;flushWater() &#x2F;&#x2F; 清除水\n                    -&gt;fetchCloths(); &#x2F;&#x2F; 最后取出衣服返回\n    &#125;\n&#125;</code></pre>\n\n<ul>\n<li>洗衣桶服务 - <code>WashingBucketService.php</code></li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">class WashingBucketService\n&#123;\n    &#x2F;**\n    * 洗衣机的洗衣桶\n    * @var array\n    *&#x2F;\n    protected $bucket;\n\n    &#x2F;**\n    * 往洗衣机的桶加入水\n    *&#x2F;\n    public function addWater()\n    &#123;\n        array_merge($this-&gt;bucket, [&#39;water&#39; &#x3D;&gt; &#39;cold water&#39;]);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 把衣服加入洗衣机桶内\n    *&#x2F;\n    public function addCloth($cloth)\n    &#123;\n        array_merge($this-&gt;bucket, [&#39;cloths&#39; &#x3D;&gt; $cloth]);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 旋转桶把开始洗衣服\n    *&#x2F;\n    public function wash($washDuration)\n    &#123;\n        &#x2F;&#x2F; 使用洗衣机的清洗时长来全换清洗衣服\n        for ($duration &#x3D; $washDuration; $duration &gt; 0; $duration--) &#123;\n            array_rand($this-&gt;bucket, 3);\n        &#125;\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 把桶里面的水清除掉\n    *&#x2F;\n    public function flushWater()\n    &#123;\n        unset($this-&gt;bucket[&#39;water&#39;]);\n\n        return $this;\n    &#125;\n\n    &#x2F;**\n    * 从洗衣桶里面把衣服拿回出来\n    *&#x2F;\n    public function fetchCloths()\n    &#123;\n        return $this-&gt;bucket[&#39;cloths&#39;]\n    &#125;\n&#125;</code></pre>\n\n<hr>\n<h2 id=\"提供和调用\"><a href=\"#提供和调用\" class=\"headerlink\" title=\"提供和调用\"></a>提供和调用</h2><p>模块与模块或者系统与系统直接都会使用到服务来互相打通业务。这个时候服务就要有一个方式提供出去让外部的模块或者系统调用。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>⚠️ 需要注意：</strong><br>这里说的是<code>外部模块</code>或者<code>系统调用</code>，这个是要考虑到如果是微服务的话，每个模块都会在不同的服务器和域名下，这个时候就需要异步调用。这种情况下如果还是用类实例的方式来提供和调用服务后面要改就很麻烦了。</p></blockquote>\n<p>这种情况下目前最优的方式就是服务提供者用<code>Trait</code>给到服务使用者来注入到业务代码里面。</p>\n<ul>\n<li>洗衣机服务 Trait - <code>WashingMachineProvider.php</code></li>\n</ul>\n<pre class=\"line-numbers language-php\" data-language=\"php\"><code class=\"language-php\">trait WashingMachineProvider\n&#123;\n    &#x2F;**\n    * 提供洗衣机服务类\n    *&#x2F;\n    public washingMachine()\n    &#123;\n        return new \\WashingMachineService();\n    &#125;\n&#125;</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>⚠️ 需要注意：</strong><br>这里是使用了命名空间来实例洗衣机服务类的。但是如果改成了微服务，那我们只需要改掉所有这些服务提供 Trait，把服务类实例改为服务发现，或者异步服务调用就可以了。再也不用花钱去买霸王洗发水了。<code>٩(^ᴗ^)۶</code></p></blockquote>\n<hr>\n<h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h2><p>经历了千辛万苦，无数个失眠的夜晚。终于知道服务到底是什么，应该怎么写，怎么写才是对的。写好服务可以提高代码的维护性，编写的代码也会有更强的逻辑和条理。好的服务也会有更好的弹性和扩张性。下面我们来总结一下编写服务的重点。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>角色</code>: 服务是系统架构里面的业务处理层。<br><code>作用</code>: 主要是为了高度解耦和封装不同场景的业务和功能到对应的服务，然而达到高度中心化的业务代码。<br><code>思路</code>: 逻辑要独立，分解成逻辑块，保持复用性高，尽量不要限定逻辑使用的顺序和高弹性的组合性。<br><code>编写</code>: 高度封装，高内聚的原理来编写服务，细化分解通用性，公用性的业务，然后封装成一个服务。</p></blockquote>\n<hr>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><strong>#通过技术悟出人生道理# 💭</strong><br>“大千世界每一件事都有千百万种做法，<br>吸收，打磨，专研，总结，进步，<br>才会找到最适合的做法。” <small> <em>～ 三·钻 TriDiamond</em><small></p></blockquote>\n","text":"其实很多系统架构里面都有服务层，但是服务对很多开发人员来说都有很多不同的定义和写法。甚至在我待过的公司里都有不同的写法和编写模式。每个人每个团队每个项目都有对服务不同的理解。那到底什么是服务，怎么理解才是对的呢？ 你们有没有过无数个夜晚里严重怀疑人生，琢磨着到底哪一种服务才是对的...","link":"","photos":[],"count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"categories":[{"name":"BackEnd","slug":"BackEnd","count":1,"path":"api/categories/BackEnd.json"}],"tags":[{"name":"PHP","slug":"PHP","count":1,"path":"api/tags/PHP.json"},{"name":"Service","slug":"Service","count":1,"path":"api/tags/Service.json"},{"name":"Architecture","slug":"Architecture","count":1,"path":"api/tags/Architecture.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%AE%9A%E4%B9%89\"><span class=\"toc-text\">服务定义</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%90%86%E8%A7%A3%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">理解服务</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">编写思路</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%86%99%E6%B3%95\"><span class=\"toc-text\">服务写法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Controller-%E6%8E%A7%E5%88%B6%E5%99%A8\"><span class=\"toc-text\">Controller 控制器</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Service-%E6%9C%8D%E5%8A%A1\"><span class=\"toc-text\">Service 服务</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%B0%81%E8%A3%85\"><span class=\"toc-text\">服务封装</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85%E6%80%9D%E8%B7%AF\"><span class=\"toc-text\">封装思路</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%81%E8%A3%85%E7%BC%96%E5%86%99\"><span class=\"toc-text\">封装编写</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8F%90%E4%BE%9B%E5%92%8C%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">提供和调用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}},"mapped":true,"prev_post":{"title":"如何高效学习编程","uid":"84a74e4a5473540e455e5775f4e38ad4","slug":"notes/learn-programming-more-effectively","date":"2019-11-01T10:26:02.000Z","updated":"2023-08-09T20:49:48.451Z","comments":true,"path":"api/articles/notes/learn-programming-more-effectively.json","keywords":null,"cover":"https://source.unsplash.com/qHexzN6spcE/1200x628","text":"编程确实不是一件容易的事情，除了要有较强的逻辑思维，还需要花大量的时间和集中力来提升和维持一定的高度。 与其他的领域不一样的是，技术每日都在变，所以对于编程初学者是很难一直与时并进的。就算是技术大神和老司机们也是追赶的比较吃力的。在技术领域打滚的这些年里，通过经历和经验总结出一些...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"Notes","slug":"Notes","count":1,"path":"api/categories/Notes.json"}],"tags":[{"name":"Learning","slug":"Learning","count":1,"path":"api/tags/Learning.json"},{"name":"Programming","slug":"Programming","count":1,"path":"api/tags/Programming.json"},{"name":"Notes","slug":"Notes","count":1,"path":"api/tags/Notes.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}},"next_post":{"title":"使用Console技巧提高JS调试技能","uid":"8c6e317d34a70d85c4a6b275416b9854","slug":"frontend/debugging-skills-console","date":"2019-10-11T15:59:19.000Z","updated":"2023-08-09T20:49:48.451Z","comments":true,"path":"api/articles/frontend/debugging-skills-console.json","keywords":null,"cover":"https://source.unsplash.com/dMUt0X3f59Q/1200x628","text":"其实 JavaScript 给到我们很多调试工具来调试代码，那问问你自己，你又知道多少呢？用到多少呢？ 大部分前端开发在 JavaScript 调试代码的常规用法都是直接console.log，直接输出某一个变量或者返回数据里面的对象数据。当然毋庸置疑这样输出来调试是没有问题的。...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"FrontEnd","slug":"FrontEnd","count":10,"path":"api/categories/FrontEnd.json"},{"name":"Tips","slug":"FrontEnd/Tips","count":2,"path":"api/categories/FrontEnd/Tips.json"},{"name":"Debugging","slug":"FrontEnd/Tips/Debugging","count":1,"path":"api/categories/FrontEnd/Tips/Debugging.json"}],"tags":[{"name":"JavaScript","slug":"JavaScript","count":4,"path":"api/tags/JavaScript.json"},{"name":"Console","slug":"Console","count":1,"path":"api/tags/Console.json"},{"name":"Debugging","slug":"Debugging","count":1,"path":"api/tags/Debugging.json"}],"author":{"name":"三钻","slug":"blog-author","avatar":"https://res.cloudinary.com/tridiamond/image/upload/v1625037705/ObsidianestLogo-hex_hecqbw.png","link":"/","description":"Think like an artist, develop like an artisan. <br /> @ <b>公众号：技术银河</b>","socials":{"github":"https://github.com/TriDiamond","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"https://weibo.com/u/7318914058","zhihu":"https://www.zhihu.com/people/tridiamond","csdn":"https://blog.csdn.net/TriDiamond6","juejin":"https://juejin.cn/user/1873223546578589","customs":{"bilibili":{"icon":"/svg/bilibili.svg","link":"https://live.bilibili.com/22619211"}}}}}}